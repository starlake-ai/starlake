---
version: 1
types:
  - name: "string"
    primitiveType: "string"
    pattern: ".+"
    sample: "Hello World"
    comment: "Any set of chars"
    ddlMapping:
      bigquery: STRING
      snowflake: STRING
      postgres: varchar(8000)
      synapse: Varchar(8000) # https://docs.microsoft.com/fr-fr/azure/synapse-analytics/metadata/table
      duckdb: VARCHAR
  - name: "variant"
    primitiveType: "variant"
    pattern: ".+"
    sample: "\"Hello World\""
    comment: "Valid JSON object"
    ddlMapping:
      bigquery: STRING
      snowflake: VARIANT
      postgres: JSONB
      synapse: NVARCHAR(MAX) # https://docs.microsoft.com/fr-fr/azure/synapse-analytics/metadata/table
      duckdb: JSON
  - name: "integer"
    pattern: "[-|\\+|0-9][0-9]*"
    primitiveType: "long"
    sample: "1234"
    comment: "Int number"
    ddlMapping:
      bigquery: INT64
      snowflake: INT
      synapse: int
      postgres: INT
      duckdb: INTEGER
  - name: "int"
    pattern: "[-|\\+|0-9][0-9]*"
    primitiveType: "long"
    sample: "1234"
    comment: "Int number"
    ddlMapping:
      bigquery: INT64
      snowflake: INT
      synapse: int
      postgres: INT
      duckdb: INTEGER
  - name: "byte"
    primitiveType: "byte"
    pattern: "."
    sample: "x"
    comment: "Any set of chars"
    ddlMapping:
      bigquery: INT64
      snowflake: INT
      synapse: smallint
      postgres: INT
      duckdb: TINYINT
  - name: "double"
    primitiveType: "double"
    pattern: "[-+]?\\d*\\.?\\d+[Ee]?[-+]?\\d*"
    sample: "-45.78"
    comment: "Any floating value"
    ddlMapping:
      bigquery: FLOAT64
      snowflake: DOUBLE
      synapse: float
      postgres: DOUBLE PRECISION
      duckdb: DOUBLE
  - name: "long"
    primitiveType: "long"
    pattern: "-?\\d+"
    sample: "-64564"
    comment: "any positive or negative number"
    ddlMapping:
      bigquery: INT64
      snowflake: INTEGER
      synapse: bigint
      postgres: INT
      duckdb: BIGINT
  - name: "short"
    primitiveType: "short"
    pattern: "-?\\d+"
    sample: "564"
    comment: "any positive or negative number"
    ddlMapping:
      bigquery: INT64
      snowflake: INTEGER
      synapse: smallint
      postgres: smallint
      duckdb: SMALLINT
  - name: "boolean"
    primitiveType: "boolean"
    pattern: "(?i)true|yes|[y1]|t<-TF->(?i)false|no|[n0]|f"
    sample: "TruE"
    ddlMapping:
      bigquery: BOOL
      snowflake: BOOLEAN
      synapse: bit
      postgres: BOOLEAN
      duckdb: BOOLEAN
  - name: "timestamp"
    primitiveType: "timestamp"
    pattern: "yyyy-MM-dd HH:mm:ss"
    sample: "2019-12-31 23:59:02"
    comment: "date/time in epoch millis"
    ddlMapping:
      bigquery: TIMESTAMP
      snowflake: TIMESTAMP
      synapse: datetime2
      postgres: TIMESTAMP
      duckdb: TIMESTAMPTZ
  - name: "decimal"
    primitiveType: "decimal"
    pattern: "[-+]?\\d*\\.?\\d+[Ee]?[-+]?\\d*"
    sample: "-45.787686786876"
    comment: "Any floating value"
    ddlMapping:
      bigquery: NUMERIC
      snowflake: DECIMAL
      synapse: decimal
      postgres: DECIMAL
      duckdb: DECIMAL
  - name: "date"
    primitiveType: "date"
    pattern: "yyyy-MM-dd"
    sample: "2018-07-21"
    comment: "Date in the format yyyy-MM-dd"
    ddlMapping:
      bigquery: DATE
      snowflake: DATE
      synapse: date
      postgres: DATE
      duckdb: DATE
  - name: "basic_iso_date"
    primitiveType: "timestamp"
    pattern: "BASIC_ISO_DATE"
    sample: "20111203"
    comment: "Timestamp based on yyyMMdd pattern"
    ddlMapping:
      bigquery: TIMESTAMP
      snowflake: TIMESTAMP
      synapse: datetime2
      postgres: TIMESTAMP
      duckdb: TIMESTAMPTZ
  - name: "iso_local_date"
    primitiveType: "timestamp"
    pattern: "ISO_LOCAL_DATE"
    sample: "2011-12-03"
    comment: "Timestamp based on yyyy-MM-dd pattern"
    ddlMapping:
      bigquery: TIMESTAMP
      snowflake: TIMESTAMP
      synapse: datetime2
      postgres: TIMESTAMP
      duckdb: TIMESTAMPTZ
  - name: "iso_offset_date"
    primitiveType: "timestamp"
    pattern: "ISO_OFFSET_DATE"
    sample: "2011-12-03+02:00"
    comment: "Timestamp based on `ISO Date with offset` pattern"
    ddlMapping:
      bigquery: TIMESTAMP
      snowflake: TIMESTAMP
      synapse: datetime2
      postgres: TIMESTAMP
      duckdb: TIMESTAMPTZ
  - name: "iso_date"
    primitiveType: "timestamp"
    pattern: "ISO_DATE"
    sample: "2011-12-03+02:00"
    comment: "Timestamp based on `ISO Date with or without offset` pattern"
    ddlMapping:
      bigquery: TIMESTAMP
      snowflake: TIMESTAMP
      synapse: datetime2
      postgres: TIMESTAMP
      duckdb: TIMESTAMPTZ
  - name: "iso_local_date_time"
    primitiveType: "timestamp"
    pattern: "ISO_LOCAL_DATE_TIME"
    sample: "2011-12-03T10:15:30"
    comment: "Timestamp based on `ISO Local Date and Time` pattern"
    ddlMapping:
      bigquery: TIMESTAMP
      snowflake: TIMESTAMP
      synapse: datetime2
      postgres: TIMESTAMP
      duckdb: TIMESTAMPTZ
  - name: "iso_offset_date_time"
    primitiveType: "timestamp"
    pattern: "ISO_OFFSET_DATE_TIME"
    sample: "2011-12-03T10:15:30+01:00"
    comment: "Timestamp based on `ISO Local Date and Time` pattern"
    ddlMapping:
      bigquery: TIMESTAMP
      snowflake: TIMESTAMP
      synapse: datetime2
      postgres: TIMESTAMP
      duckdb: TIMESTAMPTZ
  - name: "iso_zoned_date_time"
    primitiveType: "timestamp"
    pattern: "ISO_ZONED_DATE_TIME"
    sample: "2011-12-03T10:15:30+01:00[Europe/Paris]"
    comment: "Timestamp based on `ISO Zoned Date Time` pattern"
    ddlMapping:
      bigquery: TIMESTAMP
      snowflake: TIMESTAMP
      synapse: datetime2
      postgres: TIMESTAMP
      duckdb: TIMESTAMPTZ
  - name: "iso_date_time"
    primitiveType: "timestamp"
    pattern: "ISO_DATE_TIME"
    sample: "2011-12-03T10:15:30+01:00[Europe/Paris]"
    comment: "Timestamp based on `ISO Date and time with ZoneId` pattern"
    ddlMapping:
      bigquery: TIMESTAMP
      snowflake: TIMESTAMP
      synapse: datetime2
      postgres: TIMESTAMP
      duckdb: TIMESTAMPTZ
  - name: "iso_ordinal_date"
    primitiveType: "timestamp"
    pattern: "ISO_ORDINAL_DATE"
    sample: "2012-337"
    comment: "Timestamp based on `year and day of year` pattern"
    ddlMapping:
      bigquery: TIMESTAMP
      snowflake: TIMESTAMP
      synapse: datetime2
      postgres: TIMESTAMP
      duckdb: TIMESTAMPTZ
  - name: "iso_week_date"
    primitiveType: "timestamp"
    pattern: "ISO_WEEK_DATE"
    sample: "2012-W48-6"
    comment: "Timestamp based on `Year and Week` pattern"
    ddlMapping:
      bigquery: TIMESTAMP
      snowflake: TIMESTAMP
      synapse: datetime2
      postgres: TIMESTAMP
      duckdb: TIMESTAMPTZ
  - name: "iso_instant"
    primitiveType: "timestamp"
    pattern: "ISO_INSTANT"
    sample: "2011-12-03T10:15:30Z"
    comment: "Timestamp based on `Date and Time of an Instant` pattern (UTC only)"
    ddlMapping:
      bigquery: TIMESTAMP
      snowflake: TIMESTAMP
      synapse: datetime2
      postgres: TIMESTAMP
      duckdb: TIMESTAMPTZ
  - name: "rfc_1123_date_time"
    primitiveType: "timestamp"
    pattern: "RFC_1123_DATE_TIME"
    sample: "Tue, 3 Jun 2008 11:05:30 GMT"
    comment: "Timestamp based on `RFC 1123 / RFC 822` patterns"
    ddlMapping:
      bigquery: TIMESTAMP
      snowflake: TIMESTAMP
      synapse: datetime2
      postgres: TIMESTAMP
      duckdb: TIMESTAMPTZ