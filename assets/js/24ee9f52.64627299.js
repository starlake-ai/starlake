"use strict";(self.webpackChunkstarlake=self.webpackChunkstarlake||[]).push([[3027],{15680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>f});var r=n(96540);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),s=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(n),d=a,f=p["".concat(i,".").concat(d)]||p[d]||m[d]||o;return n?r.createElement(f,c(c({ref:t},u),{},{components:n})):r.createElement(f,c({ref:t},u))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[p]="string"==typeof e?e:a,c[1]=l;for(var s=2;s<o;s++)c[s]=n[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},50185:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(9668),a=(n(96540),n(15680));const o={},c="Incremental extraction",l={unversionedId:"guides/extract/incremental",id:"guides/extract/incremental",title:"Incremental extraction",description:"Incremental extraction is useful when you want to extract only the data that has changed since the last extraction.",source:"@site/docs/0300-guides/100-extract/110-incremental.mdx",sourceDirName:"0300-guides/100-extract",slug:"/guides/extract/incremental",permalink:"/starlake/docs/next/guides/extract/incremental",draft:!1,editUrl:"https://github.com/starlake-ai/starlake/edit/master/docs/docs/0300-guides/100-extract/110-incremental.mdx",tags:[],version:"current",sidebarPosition:110,frontMatter:{},sidebar:"starlakeSidebar",previous:{title:"Query extraction",permalink:"/starlake/docs/next/guides/extract/extract-from-query"},next:{title:"Parallel extraction",permalink:"/starlake/docs/next/guides/extract/parallel"}},i={},s=[],u={toc:s},p="wrapper";function m(e){let{components:t,...n}=e;return(0,a.yg)(p,(0,r.A)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"incremental-extraction"},"Incremental extraction"),(0,a.yg)("p",null,"Incremental extraction is useful when you want to extract only the data that has changed since the last extraction.\nThis is useful when you have a large dataset and only a small portion of the data changes frequently."),(0,a.yg)("p",null,"To enable incremental extraction, you need to provide a column that can be used to identify the new rows.\nThis column is called the ",(0,a.yg)("inlineCode",{parentName:"p"},"partitionColumn"),"."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-yaml",metastring:'{7,8} title="metadata/extract/my_extract_config.sl.yml"',"{7,8}":!0,title:'"metadata/extract/my_extract_config.sl.yml"'},'extract:\n  connectionRef: "duckdb" # The database connection to use\n  jdbcSchemas:\n    - schema: "starbake"\n      tables:\n        - name: "order"               # table names or  "*" to extract all tables\n          fullExport: false           # (optional) set to true to do a full export\n          partitionColumn: "order_id" # (optional) column to use for incremental extraction\n  ...\n')))}m.isMDXComponent=!0}}]);