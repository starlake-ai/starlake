"use strict";(self.webpackChunkstarlake_docs=self.webpackChunkstarlake_docs||[]).push([[3685],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>g});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},m=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),u=p(r),c=n,g=u["".concat(s,".").concat(c)]||u[c]||d[c]||o;return r?a.createElement(g,l(l({ref:t},m),{},{components:r})):a.createElement(g,l({ref:t},m))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,l=new Array(o);l[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[u]="string"==typeof e?e:n,l[1]=i;for(var p=2;p<o;p++)l[p]=r[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},2655:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>f,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_position:300},l="Transform",i={unversionedId:"userguide/transform",id:"userguide/transform",title:"Transform",description:"Once your data is ingested, you may start to expose insights by joining them and / or create meaningful aggregates.",source:"@site/docs/userguide/300.transform.md",sourceDirName:"userguide",slug:"/userguide/transform",permalink:"/starlake/docs/userguide/transform",draft:!1,editUrl:"https://github.com/starlake-ai/starlake/edit/master/docs/docs/userguide/300.transform.md",tags:[],version:"current",sidebarPosition:300,frontMatter:{sidebar_position:300},sidebar:"starlakeSidebar",previous:{title:"Load",permalink:"/starlake/docs/userguide/load"},next:{title:"Configuration",permalink:"/starlake/docs/reference/configuration"}},s={},p=[{value:"Parquet Job",id:"parquet-job",level:2},{value:"BigQuery Job",id:"bigquery-job",level:2},{value:"Transform lineage",id:"transform-lineage",level:2}],m=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",t)},u=m("Tabs"),d=m("TabItem"),c={toc:p},g="wrapper";function f(e){let{components:t,...o}=e;return(0,n.kt)(g,(0,a.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"transform"},"Transform"),(0,n.kt)("p",null,"Once your data is ingested, you may start to expose insights by joining them and / or create meaningful aggregates."),(0,n.kt)("p",null,"In the example below, we join the ",(0,n.kt)("inlineCode",{parentName:"p"},"sellers")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"orders")," tables to compute the total amount sold by each seller."),(0,n.kt)("p",null,"We want to do it on parquet files and on BigQuery. We need to create 2 env files, one per environment."),(0,n.kt)("h2",{id:"parquet-job"},"Parquet Job"),(0,n.kt)("p",null,"Create the ",(0,n.kt)("inlineCode",{parentName:"p"},"env.FS.comet.yml")," file in the ",(0,n.kt)("inlineCode",{parentName:"p"},"metadata")," folder as follows:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},'env:\n  myConnectionRef: "LocalFileSystem"\n')),(0,n.kt)("p",null,"Create in teh folder ",(0,n.kt)("inlineCode",{parentName:"p"},"metadata/transform/kpi/")," the SQL file that describe the job and name it ",(0,n.kt)("inlineCode",{parentName:"p"},"sellers_kpi.comet.yml"),":"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-SQL"},"select seller_email, sum(amount) as sum from sellers, orders where sellers.id = orders.seller_id group by sellers.seller_email\n")),(0,n.kt)("p",null,"Before executing the job, we set the ",(0,n.kt)("inlineCode",{parentName:"p"},"SL_ENV")," variable to ",(0,n.kt)("inlineCode",{parentName:"p"},"FS")," to make sure variables are instantiated correctly:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"export SL_ENV=FS\n$ starlake.sh transform --name kpi.sellers_kpi\n")),(0,n.kt)("h2",{id:"bigquery-job"},"BigQuery Job"),(0,n.kt)("p",null,"To execute the same request on BigQuery,  create the ",(0,n.kt)("inlineCode",{parentName:"p"},"env.BQ.comet.yml")," file in the ",(0,n.kt)("inlineCode",{parentName:"p"},"metadata")," folder as follows:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},'env:\n  myConnectionRef: "bigquery"\n')),(0,n.kt)("p",null,"Before executing the job, we set the ",(0,n.kt)("inlineCode",{parentName:"p"},"SL_ENV")," variable to ",(0,n.kt)("inlineCode",{parentName:"p"},"BQ")," to make sure variables are instantiated correctly:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"export SL_ENV=BQ\n$ starlake.sh transform --name kpi.sellers_kpi\n")),(0,n.kt)("h2",{id:"transform-lineage"},"Transform lineage"),(0,n.kt)("p",null,"To display the job linage, run the following command:"),(0,n.kt)(u,{groupId:"platforms",mdxType:"Tabs"},(0,n.kt)(d,{value:"linux_macos",label:"Linux/MacOS",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"$ cd $HOME/myproject\n$ $HOME/starlake/starlake.sh jobs2gv\n"))),(0,n.kt)(d,{value:"windows",label:"Windows",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-powershell"},"c:\\users\\me\\starlake> %userprofile%\\starlake\\starlake.cmd jobs2gv\n"))),(0,n.kt)(d,{value:"docker",label:"Docker",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sh"},"$ docker run                                                        \\\n-e SL_ROOT=/app/myproject                                    \\\n-v $HOME/myproject:/app/myproject -it starlake jobs2gv\n")))),(0,n.kt)("p",null,"This will display the dot file. Copy paste de result to the following URL : ",(0,n.kt)("a",{parentName:"p",href:"https://dreampuf.github.io/GraphvizOnline/"},"https://dreampuf.github.io/GraphvizOnline/")),(0,n.kt)("p",null,(0,n.kt)("img",{src:r(4224).Z,width:"2968",height:"1198"})),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"You may also convert this file to a png/svg/... file using the ",(0,n.kt)("inlineCode",{parentName:"p"},"dot")," command available at ",(0,n.kt)("a",{parentName:"p",href:"https://graphviz.org/download/"},"https://graphviz.org/download/"))))}f.isMDXComponent=!0},4224:(e,t,r)=>{r.d(t,{Z:()=>a});const a=r.p+"assets/images/graphviz-transform-b6eb963d92288a96036365a1074e2476.png"}}]);