"use strict";(self.webpackChunkstarlake=self.webpackChunkstarlake||[]).push([[8629],{15680:(e,t,a)=>{a.d(t,{xA:()=>g,yg:()=>y});var n=a(96540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},g=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),c=d(a),m=r,y=c["".concat(s,".").concat(m)]||c[m]||p[m]||i;return a?n.createElement(y,l(l({ref:t},g),{},{components:a})):n.createElement(y,l({ref:t},g))}));function y(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:r,l[1]=o;for(var d=2;d<i;d++)l[d]=a[d];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},89042:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var n=a(9668),r=(a(96540),a(15680));const i={},l="Load strategies",o={unversionedId:"guides/load/load-strategies",id:"guides/load/load-strategies",title:"Load strategies",description:"Standard strategies",source:"@site/docs/0300-guides/200-load/155-load-strategies.mdx",sourceDirName:"0300-guides/200-load",slug:"/guides/load/load-strategies",permalink:"/docs/next/guides/load/load-strategies",draft:!1,editUrl:"https://github.com/starlake-ai/starlake/edit/master/docs/docs/0300-guides/200-load/155-load-strategies.mdx",tags:[],version:"current",sidebarPosition:155,frontMatter:{},sidebar:"starlakeSidebar",previous:{title:"Load fixed width files",permalink:"/docs/next/guides/load/position"},next:{title:"Write strategies",permalink:"/docs/next/guides/load/write-strategies"}},s={},d=[{value:"Standard strategies",id:"standard-strategies",level:2},{value:"Custom Strategies",id:"custom-strategies",level:2}],g={toc:d},c="wrapper";function p(e){let{components:t,...a}=e;return(0,r.yg)(c,(0,n.A)({},g,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("h1",{id:"load-strategies"},"Load strategies"),(0,r.yg)("h2",{id:"standard-strategies"},"Standard strategies"),(0,r.yg)("p",null,"The ",(0,r.yg)("inlineCode",{parentName:"p"},"starlake")," load  will look for each domain and table, the files that match the pattern specified in\nthe ",(0,r.yg)("inlineCode",{parentName:"p"},"table.pattern")," attribute of the ",(0,r.yg)("inlineCode",{parentName:"p"},"metadata/load/<domain>/<table>.sl.yml")," file in the directory specified in the ",(0,r.yg)("inlineCode",{parentName:"p"},"load.metadata.directory"),"\nattribute of the same file or, if not specified, from the ",(0,r.yg)("inlineCode",{parentName:"p"},"<domain>/_config.sl.yml")," file."),(0,r.yg)("p",null,"starlake comes with two load strategies:"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Load Strategy"),(0,r.yg)("th",{parentName:"tr",align:null},"Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"ai.starlake.job.load.IngestionTimeStrategy")),(0,r.yg)("td",{parentName:"tr",align:null},"Load the files in a chronological order based on the file last modification time. This is the default.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)("inlineCode",{parentName:"td"},"ai.starlake.job.load.IngestionNameStrategy")),(0,r.yg)("td",{parentName:"tr",align:null},"Load the files in a lexicographical order based on the file name.")))),(0,r.yg)("p",null,"To use a load strategy, you need to specify the ",(0,r.yg)("inlineCode",{parentName:"p"},"loadStrategyClass")," attribute in the ",(0,r.yg)("inlineCode",{parentName:"p"},"metadata/application.sl.yml")," file."),(0,r.yg)("br",null),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml",metastring:'title="metadata/application.sl.yml: to switch from a time based load to a name based load"',title:'"metadata/application.sl.yml:',to:!0,switch:!0,from:!0,a:!0,time:!0,based:!0,load:!0,name:!0,'load"':!0},"application:\n  ...\n  loadStrategyClass: ai.starlake.job.load.IngestionNameStrategy\n  ...\n")),(0,r.yg)("h2",{id:"custom-strategies"},"Custom Strategies"),(0,r.yg)("p",null,"You can define your own load strategy by implementing the ",(0,r.yg)("inlineCode",{parentName:"p"},"ai.starlake.job.load.LoadStrategy")," interface."),(0,r.yg)("br",null),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-scala",metastring:'title="src/main/scala/my/own//CustomLoadStrategy.scala"',title:'"src/main/scala/my/own//CustomLoadStrategy.scala"'},'object CustomLoadStrategy extends LoadStrategy with StrictLogging {\n\n  def list(\n    storageHandler: StorageHandler,\n    path: Path,\n    extension: String = "",\n    since: LocalDateTime = LocalDateTime.MIN,\n    recursive: Boolean\n  ): List[FileInfo] = ???\n}\n')),(0,r.yg)("br",null),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yaml",metastring:'title="metadata/application.sl.yml: to use a custom load strategy"',title:'"metadata/application.sl.yml:',to:!0,use:!0,a:!0,custom:!0,load:!0,'strategy"':!0},"\napplication:\n  ...\n  loadStrategyClass: ai.starlake.job.load.MyLoadStrategy\n  ...\n")))}p.isMDXComponent=!0}}]);