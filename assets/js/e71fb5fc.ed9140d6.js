"use strict";(self.webpackChunkstarlake=self.webpackChunkstarlake||[]).push([[4060],{31485:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var n=t(74848),s=t(28453);const r={sidebar_position:170,title:"stage"},o=void 0,a={id:"cli/import",title:"stage",description:"Synopsis",source:"@site/versioned_docs/version-1.2.0/0800-cli/import.md",sourceDirName:"0800-cli",slug:"/cli/import",permalink:"/starlake/docs/cli/import",draft:!1,unlisted:!1,editUrl:"https://github.com/starlake-ai/starlake/edit/master/docs/versioned_docs/version-1.2.0/0800-cli/import.md",tags:[],version:"1.2.0",sidebarPosition:170,frontMatter:{sidebar_position:170,title:"stage"},sidebar:"starlakeSidebar",previous:{title:"iam-policies",permalink:"/starlake/docs/cli/iam-policies"},next:{title:"infer-schema",permalink:"/starlake/docs/cli/infer-schema"}},d={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Description",id:"description",level:2},{value:"Parameters",id:"parameters",level:2}];function l(e){const i={code:"code",em:"em",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.strong,{children:"starlake stage [options]"})}),"\n",(0,n.jsx)(i.h2,{id:"description",children:"Description"}),"\n",(0,n.jsx)(i.p,{children:"Move the files from the landing area to the pending area."}),"\n",(0,n.jsx)(i.p,{children:"Files are loaded one domain at a time."}),"\n",(0,n.jsx)(i.p,{children:'Each domain has its own directory and is specified in the "directory" key of Domain YML file\ncompressed files are uncompressed if a corresponding ack file exist.'}),"\n",(0,n.jsx)(i.p,{children:"Compressed files are recognized by their extension which should be one of .tgz, .zip, .gz.\nraw file should also have a corresponding ack file\nbefore moving the files to the pending area, the ack files are deleted."}),"\n",(0,n.jsx)(i.p,{children:'To import files without ack specify an empty "ack" key (aka ack:"") in the domain YML file.'}),"\n",(0,n.jsx)(i.p,{children:'"ack" is the default ack extension searched for but you may specify a different one in the domain YML file.'}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-shell",children:"comet import\n"})}),"\n",(0,n.jsx)(i.h2,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(i.table,{children:[(0,n.jsx)(i.thead,{children:(0,n.jsxs)(i.tr,{children:[(0,n.jsx)(i.th,{children:"Parameter"}),(0,n.jsx)(i.th,{children:"Cardinality"}),(0,n.jsx)(i.th,{children:"Description"})]})}),(0,n.jsx)(i.tbody,{children:(0,n.jsxs)(i.tr,{children:[(0,n.jsxs)(i.td,{children:["--domains:",(0,n.jsx)(i.code,{children:"domain1,domain2..."})]}),(0,n.jsx)(i.td,{children:(0,n.jsx)(i.em,{children:"Optional"})}),(0,n.jsx)(i.td,{children:"Domains to stage"})]})})]})]})}function h(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,i,t)=>{t.d(i,{R:()=>o,x:()=>a});var n=t(96540);const s={},r=n.createContext(s);function o(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);