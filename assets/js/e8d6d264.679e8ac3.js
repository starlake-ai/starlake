"use strict";(self.webpackChunkstarlake=self.webpackChunkstarlake||[]).push([[1802],{15680:(e,t,r)=>{r.d(t,{xA:()=>u,yg:()=>m});var n=r(96540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=l(r),p=a,m=d["".concat(s,".").concat(p)]||d[p]||y[p]||o;return r?n.createElement(m,c(c({ref:t},u),{},{components:r})):n.createElement(m,c({ref:t},u))}));function m(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,c=new Array(o);c[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:a,c[1]=i;for(var l=2;l<o;l++)c[l]=r[l];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},49816:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>y,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var n=r(9668),a=(r(96540),r(15680));const o={},c="Query extraction",i={unversionedId:"guides/extract/extract-from-query",id:"guides/extract/extract-from-query",title:"Query extraction",description:"Query extraction is useful when you want to extract schema's and data based on a user-defined query.",source:"@site/docs/0300-guides/100-extract/105-extract-from-query.mdx",sourceDirName:"0300-guides/100-extract",slug:"/guides/extract/extract-from-query",permalink:"/starlake/docs/next/guides/extract/extract-from-query",draft:!1,editUrl:"https://github.com/starlake-ai/starlake/edit/master/docs/docs/0300-guides/100-extract/105-extract-from-query.mdx",tags:[],version:"current",sidebarPosition:105,frontMatter:{},sidebar:"starlakeSidebar",previous:{title:"Tutorial",permalink:"/starlake/docs/next/guides/extract/tutorial"},next:{title:"Incremental extraction",permalink:"/starlake/docs/next/guides/extract/incremental"}},s={},l=[],u={toc:l},d="wrapper";function y(e){let{components:t,...r}=e;return(0,a.yg)(d,(0,n.A)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"query-extraction"},"Query extraction"),(0,a.yg)("p",null,"Query extraction is useful when you want to extract schema's and data based on a user-defined query.\nSchema's extraction will try to retrieve its remarks based on its table name if it exists."),(0,a.yg)("p",null,"Query extraction doesn't infer primary keys nor foreign keys. All attributes are considered not required."),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-yaml",metastring:'{7,8} title="metadata/extract/my_extract_config.sl.yml"',"{7,8}":!0,title:'"metadata/extract/my_extract_config.sl.yml"'},'extract:\n  connectionRef: "duckdb" # The database connection to use\n  jdbcSchemas:\n    - schema: "starbake"\n      tables:\n        - name: "order"               # table names or  "*" to extract all tables\n          sql: "select * from starbake.order"\n  ...\n')),(0,a.yg)("p",null,"It is currently supported only for JDBC connection"))}y.isMDXComponent=!0}}]);