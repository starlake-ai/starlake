"use strict";(self.webpackChunkstarlake=self.webpackChunkstarlake||[]).push([[6015],{32484:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var a=n(74848),r=n(28453);const o={},l="Parallel extraction",s={id:"guides/extract/parallel",title:"Parallel extraction",description:"To make extraction faster, we can parallelize the extraction process.",source:"@site/docs/0300-guides/100-extract/120-parallel.mdx",sourceDirName:"0300-guides/100-extract",slug:"/guides/extract/parallel",permalink:"/starlake/docs/next/guides/extract/parallel",draft:!1,unlisted:!1,editUrl:"https://github.com/starlake-ai/starlake/edit/master/docs/docs/0300-guides/100-extract/120-parallel.mdx",tags:[],version:"current",sidebarPosition:120,frontMatter:{},sidebar:"starlakeSidebar",previous:{title:"Incremental extraction",permalink:"/starlake/docs/next/guides/extract/incremental"},next:{title:"Monitoring",permalink:"/starlake/docs/next/guides/extract/monitoring"}},i={},c=[];function d(e){const t={code:"code",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"parallel-extraction",children:"Parallel extraction"}),"\n",(0,a.jsxs)(t.p,{children:["To make extraction faster, we can parallelize the extraction process.\nThis is done by setting the ",(0,a.jsx)(t.code,{children:"numPartitions"})," attribute."]}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-yaml",metastring:'{7,8,9} title="metadata/extract/my_extract_config.sl.yml"',children:'extract:\n  connectionRef: "duckdb" # The database connection to use\n  jdbcSchemas:\n    - schema: "starbake"\n      tables:\n        - name: "order"               # table names or  "*" to extract all tables\n          fullExport: true            # (optional) set to false to use incremental extraction\n          partitionColumn: "order_id" # (optional) column to use for partitioning\n          numPartitions: 4            # Level of parallelism (defaults to 1 aka no parallelism)\n  ...\n'})}),"\n",(0,a.jsx)(t.p,{children:"Note that when using parallel extraction,"}),"\n",(0,a.jsxs)(t.ul,{children:["\n",(0,a.jsxs)(t.li,{children:["the ",(0,a.jsx)(t.code,{children:"partitionColumn"})," attribute must be set to the column to use for partitioning and"]}),"\n",(0,a.jsxs)(t.li,{children:["the ",(0,a.jsx)(t.code,{children:"numPartitions"})," attribute must be set to the number of partitions to use."]}),"\n"]}),"\n",(0,a.jsx)(t.p,{children:"If incremental extraction is used (fullExport set to false),\nthe partitionColumn used for parallel extraction is also the column used for incremental extraction:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-yaml",metastring:'{7,8,9} title="metadata/extract/my_extract_config.sl.yml"',children:'extract:\n  connectionRef: "duckdb" # The database connection to use\n  jdbcSchemas:\n    - schema: "starbake"\n      tables:\n        - name: "order"               # table names or  "*" to extract all tables\n          fullExport: false            # (optional) set to false to use incremental extraction\n          partitionColumn: "order_id" # (optional) column to use for partitioning\n          numPartitions: 4            # Level of parallelism (defaults to 1 aka no parallelism)\n  ...\n'})})]})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>s});var a=n(96540);const r={},o=a.createContext(r);function l(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);