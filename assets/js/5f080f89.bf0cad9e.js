"use strict";(self.webpackChunkstarlake=self.webpackChunkstarlake||[]).push([[6785],{90219:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>o});var i=s(74848),n=s(28453);const r={sidebar_position:200,title:"kafkaload"},a=void 0,d={id:"cli/kafkaload",title:"kafkaload",description:"Synopsis",source:"@site/docs/0800-cli/kafkaload.md",sourceDirName:"0800-cli",slug:"/cli/kafkaload",permalink:"/starlake/docs/next/cli/kafkaload",draft:!1,unlisted:!1,editUrl:"https://github.com/starlake-ai/starlake/edit/master/docs/docs/0800-cli/kafkaload.md",tags:[],version:"current",sidebarPosition:200,frontMatter:{sidebar_position:200,title:"kafkaload"},sidebar:"starlakeSidebar",previous:{title:"ingest",permalink:"/starlake/docs/next/cli/ingest"},next:{title:"lineage",permalink:"/starlake/docs/next/cli/lineage"}},l={},o=[{value:"Synopsis",id:"synopsis",level:2},{value:"Description",id:"description",level:2},{value:"Batch mode",id:"batch-mode",level:3},{value:"Streaming mode",id:"streaming-mode",level:3},{value:"Parameters",id:"parameters",level:2},{value:"Samples",id:"samples",level:2},{value:"Batch offload topic from kafka to a file",id:"batch-offload-topic-from-kafka-to-a-file",level:3}];function c(e){const t={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"starlake kafkaload [options]"})}),"\n",(0,i.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(t.p,{children:"Two modes are available : The batch mode and the streaming mode."}),"\n",(0,i.jsx)(t.h3,{id:"batch-mode",children:"Batch mode"}),"\n",(0,i.jsxs)(t.p,{children:["In batch mode, you start the kafka (off)loader regurarly and the last consumed offset\nwill be stored in the ",(0,i.jsx)(t.code,{children:"comet_offsets"})," topic config\n(see ",(0,i.jsx)(t.a,{href:"https://github.com/starlake-ai/starlake/blob/master/src/main/resources/reference-kafka.conf#L22",children:"reference-kafka.conf"})," for an example)."]}),"\n",(0,i.jsx)(t.p,{children:"When offloading data from kafka to a file, you may ask to coalesce the result to a specific number of files / partitions.\nIf you ask to coalesce to a single partition, the offloader will store the data in the exact filename you provided in the path\nargument."}),"\n",(0,i.jsxs)(t.p,{children:["The figure below describes the batch offloading process\n",(0,i.jsx)(t.img,{src:s(86949).A+"",width:"669",height:"504"})]}),"\n",(0,i.jsxs)(t.p,{children:["The figure below describes the batch offloading process with ",(0,i.jsx)(t.code,{children:'comet-offsets-mode = "FILE"'}),"\n",(0,i.jsx)(t.img,{src:s(90753).A+"",width:"769",height:"521"})]}),"\n",(0,i.jsx)(t.h3,{id:"streaming-mode",children:"Streaming mode"}),"\n",(0,i.jsx)(t.p,{children:"In this mode, te program keep running and you the comet_offsets topic is not used. The (off)loader will use a consumer group id\nyou specify in the access options of the topic configuration you are dealing with."}),"\n",(0,i.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Parameter"}),(0,i.jsx)(t.th,{children:"Cardinality"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["--config:",(0,i.jsx)(t.code,{children:"<value>"})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:"Optional"})}),(0,i.jsx)(t.td,{children:"Topic Name declared in reference.conf file"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["--connectionRef:",(0,i.jsx)(t.code,{children:"<value>"})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:"Optional"})}),(0,i.jsx)(t.td,{children:"Connection to any specific sink"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["--format:",(0,i.jsx)(t.code,{children:"<value>"})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:"Optional"})}),(0,i.jsx)(t.td,{children:"Read/Write format eq : parquet, json, csv ... Default to parquet."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["--path:",(0,i.jsx)(t.code,{children:"<value>"})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:"Optional"})}),(0,i.jsx)(t.td,{children:"Source file for load and target file for store"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["--options:",(0,i.jsx)(t.code,{children:"<value>"})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:"Optional"})}),(0,i.jsx)(t.td,{children:"Options to pass to Spark Reader"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["--write-config:",(0,i.jsx)(t.code,{children:"<value>"})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:"Optional"})}),(0,i.jsx)(t.td,{children:"Topic Name declared in reference.conf file"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["--write-path:",(0,i.jsx)(t.code,{children:"<value>"})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:"Optional"})}),(0,i.jsx)(t.td,{children:"Source file for load and target file for store"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["--write-mode:",(0,i.jsx)(t.code,{children:"<value>"})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:"Optional"})}),(0,i.jsx)(t.td,{children:"When offload is true, describes how data should be stored on disk. Ignored if offload is false."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["--write-options:",(0,i.jsx)(t.code,{children:"<value>"})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:"Optional"})}),(0,i.jsx)(t.td,{children:"Options to pass to Spark Writer"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["--write-format:",(0,i.jsx)(t.code,{children:"<value>"})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:"Optional"})}),(0,i.jsx)(t.td,{children:"Streaming format eq. kafka, console ..."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["--write-coalesce:",(0,i.jsx)(t.code,{children:"<value>"})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:"Optional"})}),(0,i.jsx)(t.td,{children:"Should we coalesce the resulting dataframe"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["--transform:",(0,i.jsx)(t.code,{children:"<value>"})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:"Optional"})}),(0,i.jsx)(t.td,{children:"Any transformation to apply to message before loading / offloading it"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["--stream:",(0,i.jsx)(t.code,{children:"<value>"})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:"Optional"})}),(0,i.jsx)(t.td,{children:"Should we use streaming mode ?"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["--streaming-trigger:",(0,i.jsx)(t.code,{children:"<value>"})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:"Optional"})}),(0,i.jsx)(t.td,{children:"Once / Continuous / ProcessingTime"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["--streaming-trigger-option:",(0,i.jsx)(t.code,{children:"<value>"})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:"Optional"})}),(0,i.jsxs)(t.td,{children:["10 seconds for example. see ",(0,i.jsx)(t.a,{href:"https://spark.apache.org/docs/latest/api/java/org/apache/spark/sql/streaming/Trigger.html#ProcessingTime-java.lang.String-",children:"https://spark.apache.org/docs/latest/api/java/org/apache/spark/sql/streaming/Trigger.html#ProcessingTime-java.lang.String-"})]})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["--streaming-to-table:",(0,i.jsx)(t.code,{children:"<value>"})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:"Optional"})}),(0,i.jsx)(t.td,{children:"Table name to sink to"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["--streaming-partition-by:",(0,i.jsx)(t.code,{children:"<value>"})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:"Optional"})}),(0,i.jsx)(t.td,{children:"List of columns to use for partitioning"})]})]})]}),"\n",(0,i.jsx)(t.h2,{id:"samples",children:"Samples"}),"\n",(0,i.jsx)(t.h3,{id:"batch-offload-topic-from-kafka-to-a-file",children:"Batch offload topic from kafka to a file"}),"\n",(0,i.jsx)(t.p,{children:"Assume we want to periodically offload an avro topic to the disk and create a filename with the date time, the batch was started.\nWe need to provide the following input parameters to the starlake batch:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"offload: We set it to true since we are consuming data from kafka"}),"\n",(0,i.jsx)(t.li,{children:"mode: Overwrite since we are creating a unique file for each starlake batch"}),"\n",(0,i.jsxs)(t.li,{children:["path: the file path where the consumed data will be stored. We can use here any standard starlake variable, for example ",(0,i.jsx)(t.code,{children:"/tmp/file-{{sl_datetime}}.txt"})]}),"\n",(0,i.jsx)(t.li,{children:"format: We may save it in any spark supported format (parquet, text, json ...)"}),"\n",(0,i.jsx)(t.li,{children:"coalesce: Write all consumed messages into a single file if set to 1"}),"\n",(0,i.jsx)(t.li,{children:"config: The config entry on the application.conf describing the topic connections options. See below."}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},90753:(e,t,s)=>{s.d(t,{A:()=>i});const i=s.p+"assets/images/kafka-offload-fs-1b2743b81e76d7adc87e0195e2f8b4b4.png"},86949:(e,t,s)=>{s.d(t,{A:()=>i});const i=s.p+"assets/images/kafka-offload-f33e7634d7aa0e5a6038e74902d5edc7.png"},28453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>d});var i=s(96540);const n={},r=i.createContext(n);function a(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);