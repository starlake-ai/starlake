"use strict";(self.webpackChunkstarlake_docs=self.webpackChunkstarlake_docs||[]).push([[5708],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>k});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=d(a),c=r,k=p["".concat(s,".").concat(c)]||p[c]||m[c]||l;return a?n.createElement(k,o(o({ref:t},u),{},{components:a})):n.createElement(k,o({ref:t},u))}));function k(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,o=new Array(l);o[0]=c;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:r,o[1]=i;for(var d=2;d<l;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(7294),r=a(6010);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(l.tabItem,o),hidden:a},t)}},4866:(e,t,a)=>{a.d(t,{Z:()=>v});var n=a(7462),r=a(7294),l=a(6010),o=a(2466),i=a(6550),s=a(1980),d=a(7392),u=a(12);function p(e){return function(e){return r.Children.map(e,(e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}function m(e){const{values:t,children:a}=e;return(0,r.useMemo)((()=>{const e=t??p(a);return function(e){const t=(0,d.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function c(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function k(e){let{queryString:t=!1,groupId:a}=e;const n=(0,i.k6)(),l=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s._X)(l),(0,r.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(n.location.search);t.set(l,e),n.replace({...n.location,search:t.toString()})}),[l,n])]}function h(e){const{defaultValue:t,queryString:a=!1,groupId:n}=e,l=m(e),[o,i]=(0,r.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!c({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:l}))),[s,d]=k({queryString:a,groupId:n}),[p,h]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,l]=(0,u.Nk)(a);return[n,(0,r.useCallback)((e=>{a&&l.set(e)}),[a,l])]}({groupId:n}),f=(()=>{const e=s??p;return c({value:e,tabValues:l})?e:null})();(0,r.useLayoutEffect)((()=>{f&&i(f)}),[f]);return{selectedValue:o,selectValue:(0,r.useCallback)((e=>{if(!c({value:e,tabValues:l}))throw new Error(`Can't select invalid tab value=${e}`);i(e),d(e),h(e)}),[d,h,l]),tabValues:l}}var f=a(2389);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function g(e){let{className:t,block:a,selectedValue:i,selectValue:s,tabValues:d}=e;const u=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.o5)(),m=e=>{const t=e.currentTarget,a=u.indexOf(t),n=d[a].value;n!==i&&(p(t),s(n))},c=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const a=u.indexOf(e.currentTarget)+1;t=u[a]??u[0];break}case"ArrowLeft":{const a=u.indexOf(e.currentTarget)-1;t=u[a]??u[u.length-1];break}}t?.focus()};return r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":a},t)},d.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>u.push(e),onKeyDown:c,onClick:m},o,{className:(0,l.Z)("tabs__item",b.tabItem,o?.className,{"tabs__item--active":i===t})}),a??t)})))}function N(e){let{lazy:t,children:a,selectedValue:n}=e;const l=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=l.find((e=>e.props.value===n));return e?(0,r.cloneElement)(e,{className:"margin-top--md"}):null}return r.createElement("div",{className:"margin-top--md"},l.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function y(e){const t=h(e);return r.createElement("div",{className:(0,l.Z)("tabs-container",b.tabList)},r.createElement(g,(0,n.Z)({},e,t)),r.createElement(N,(0,n.Z)({},e,t)))}function v(e){const t=(0,f.Z)();return r.createElement(y,(0,n.Z)({key:String(t)},e))}},2891:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var n=a(7462),r=(a(7294),a(3905));a(4866),a(5162);const l={sidebar_position:100,title:"Complete example"},o=void 0,i={unversionedId:"userguide/example",id:"userguide/example",title:"Complete example",description:"In this section you will learn how to load and transform data using the samples files created when bootstrapping a new project.",source:"@site/docs/userguide/100.example.mdx",sourceDirName:"userguide",slug:"/userguide/example",permalink:"/starlake/docs/userguide/example",draft:!1,editUrl:"https://github.com/starlake-ai/starlake/edit/master/docs/docs/userguide/100.example.mdx",tags:[],version:"current",sidebarPosition:100,frontMatter:{sidebar_position:100,title:"Complete example"},sidebar:"starlakeSidebar",previous:{title:"Transform",permalink:"/starlake/docs/quickstart/transform"},next:{title:"Load",permalink:"/starlake/docs/userguide/load"}},s={},d=[{value:"Sample scenario",id:"sample-scenario",level:2},{value:"customers dataset",id:"customers-dataset",level:4},{value:"orders dataset",id:"orders-dataset",level:4},{value:"sellers dataset",id:"sellers-dataset",level:4},{value:"locations dataset",id:"locations-dataset",level:4},{value:"Recap",id:"recap",level:2},{value:"Import data",id:"import-data",level:2},{value:"Build it",id:"build-it",level:3},{value:"Run it",id:"run-it",level:3}],u={toc:d},p="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(p,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"In this section you will learn how to load and transform data using the samples files created when ",(0,r.kt)("a",{parentName:"p",href:"../quickstart/bootstrap"},"bootstrapping a new project"),".\nYou will learn how to:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"import: recognize new arriving files that need to be loaded into your warehouse"),(0,r.kt)("li",{parentName:"ul"},"load: Validate file records and load data into you warehouse"),(0,r.kt)("li",{parentName:"ul"},"transform: Apply transformation oin your previously loaded data")),(0,r.kt)("h2",{id:"sample-scenario"},"Sample scenario"),(0,r.kt)("p",null,"Say we have to ingest ",(0,r.kt)("inlineCode",{parentName:"p"},"customers"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"orders"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"locations")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"sellers"),' into the warehouse.\nThe customers and orders are provided by the "sales" department while\nthe sellers and locations datasets are provided by the HR department.'),(0,r.kt)("p",null,"The following rules need to be applied at load time:"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"locations")," dataset should replace any previous imported ",(0,r.kt)("inlineCode",{parentName:"p"},"locations")," dataset."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"customers")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"sellers"),"datasets are just updates of the previous imported ones."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"orders")," dataset contains new, updated and deleted orders.\nOnce imported, we want the deleted orders to be removed from the warehouse and\nto only keep the last update of each order."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"customers")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"orders"),' datasets are sent by the "sales" department\nas CSV  files. Below is an extract of these files.'),(0,r.kt)("h4",{id:"customers-dataset"},"customers dataset"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},'File customers-2018-05-10.psv from "sales" department')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"id"),(0,r.kt)("th",{parentName:"tr",align:null},"signup"),(0,r.kt)("th",{parentName:"tr",align:null},"contact"),(0,r.kt)("th",{parentName:"tr",align:null},"birthdate"),(0,r.kt)("th",{parentName:"tr",align:null},"name1"),(0,r.kt)("th",{parentName:"tr",align:null},"name2"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"A009701"),(0,r.kt)("td",{parentName:"tr",align:null},"2010-01-31 23:04:15"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"mailto:me@home.com"},"me@home.com")),(0,r.kt)("td",{parentName:"tr",align:null},"1980-10-14"),(0,r.kt)("td",{parentName:"tr",align:null},"Donald"),(0,r.kt)("td",{parentName:"tr",align:null},"Obama")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"B308629"),(0,r.kt)("td",{parentName:"tr",align:null},"2016-12-01 09:56:02"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"mailto:you@land.com"},"you@land.com")),(0,r.kt)("td",{parentName:"tr",align:null},"1980-10-14"),(0,r.kt)("td",{parentName:"tr",align:null},"Barack"),(0,r.kt)("td",{parentName:"tr",align:null},"Trump")))),(0,r.kt)("h4",{id:"orders-dataset"},"orders dataset"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},'File orders-2018-05-10.csv from the "sales" department')),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"order_id"),(0,r.kt)("th",{parentName:"tr",align:null},"customer_id"),(0,r.kt)("th",{parentName:"tr",align:null},"amount"),(0,r.kt)("th",{parentName:"tr",align:null},"seller_id"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"12345"),(0,r.kt)("td",{parentName:"tr",align:null},"A009701"),(0,r.kt)("td",{parentName:"tr",align:null},"123.65"),(0,r.kt)("td",{parentName:"tr",align:null},"AQZERD")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"56432"),(0,r.kt)("td",{parentName:"tr",align:null},"B308629"),(0,r.kt)("td",{parentName:"tr",align:null},"23.8"),(0,r.kt)("td",{parentName:"tr",align:null},"AQZERD")))),(0,r.kt)("h4",{id:"sellers-dataset"},"sellers dataset"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"sellers")," dataset below is sent as JSON array by the HR department."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"File sellers-2018-05-10.json from the HR department")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'[\n  { \n    "id":"AQZERD", \n    "seller_email":"me@acme.com", \n    "location_id": 1\n  },\n  { \n    "id":"TYUEZG", \n    "seller_email":"acme.com", \n    "location_id": 2 \n  }\n]\n')),(0,r.kt)("admonition",{type:"caution"},(0,r.kt)("p",{parentName:"admonition"},"We intentionnally set an invalid email for the second seller above to illustrate how errors are handled and monitored.")),(0,r.kt)("h4",{id:"locations-dataset"},"locations dataset"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"locations")," dataset below is sent as JSON file by the HR department with one json record per line."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"File locations-2018-05-10.json from the HR department")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{ "id":1, "address": { "city":"Paris", "stores": ["Store 1", "Store 2", "Store 3"], "country":"France" }}\n{ "id":2, "address": { "city":"Berlin", "country":"Germany" }}\n')),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},'Before sending the files, the "sales" department zip all its files\ninto a single compressed file and put them in the folder /mnt/incoming/sales of the landing area.')),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"the HR department does not zip its files. It simply copy them into the\nfolder /mnt/incoming/hr of the landing area.")),(0,r.kt)("h2",{id:"recap"},"Recap"),(0,r.kt)("p",null,"We will load the following files:"),(0,r.kt)("p",null,"From the sales department, customers and orders in delimiter separated files :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"customers and orders are appended to the previous imported data"),(0,r.kt)("li",{parentName:"ul"},"new orders are added"),(0,r.kt)("li",{parentName:"ul"},"updated orders replace existing ones"),(0,r.kt)("li",{parentName:"ul"},"and some orders may even be deleted when marked as such in the input dataset")),(0,r.kt)("p",null,"From the HR department, sellers and locations in json files :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"sellers are imported in a cumulative way while locations are imported as full content and overwrite the existing locations dataset"),(0,r.kt)("li",{parentName:"ul"},"sellers are received as an array of json objects"),(0,r.kt)("li",{parentName:"ul"},"locations are received in JSON file with one json record per line")),(0,r.kt)("p",null,"In Starlake terms we will end up with with:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"two ",(0,r.kt)("strong",{parentName:"li"},"domains"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"sales")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"hr"),". A domain is equivalent to a database schema or a BigQuery Dataset."),(0,r.kt)("li",{parentName:"ul"},"four tables: the ",(0,r.kt)("inlineCode",{parentName:"li"},"customers")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"orders")," tables in the ",(0,r.kt)("inlineCode",{parentName:"li"},"sales")," domain\nand the ",(0,r.kt)("inlineCode",{parentName:"li"},"loations")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"sellers")," tables in the ",(0,r.kt)("inlineCode",{parentName:"li"},"hr")," domain.")),(0,r.kt)("h2",{id:"import-data"},"Import data"),(0,r.kt)("h3",{id:"build-it"},"Build it"),(0,r.kt)("p",null,"Clone the project, install sbt 1.5+ and run ",(0,r.kt)("inlineCode",{parentName:"p"},"sbt clean assembly"),". This will create the assembly in the ",(0,r.kt)("inlineCode",{parentName:"p"},"target/scala-2.12")," directory\nor simply download the assembly artefact from ",(0,r.kt)("a",{parentName:"p",href:"https://maven-badges.herokuapp.com/maven-central/ai.starlake/starlake-spark3_2.12"},"Maven Central")),(0,r.kt)("h3",{id:"run-it"},"Run it"),(0,r.kt)("p",null,"To run the quickstart on a local filesystem, simply copy the content of the quickstart directory to your /tmp directory.\nThis will create the ",(0,r.kt)("inlineCode",{parentName:"p"},"/tmp/metadata")," and the ",(0,r.kt)("inlineCode",{parentName:"p"},"/tmp/incoming")," folders."),(0,r.kt)("p",null,"Import the datasets into the cluster:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"/app/starlake/starlake.sh import\n")),(0,r.kt)("p",null,"This will put the datasets in the ",(0,r.kt)("inlineCode",{parentName:"p"},"/tmp/datasets/pending/")," folder. In real life, this will be a HDFS or Cloud Storage folder."),(0,r.kt)("p",null,"Run the ingestion process as follows :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"/app/starlake/starlake.sh watch\n")),(0,r.kt)("p",null,"This will ingest the four datasets of the two domains (hr & sales) and store them as parquet files into the folders:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/tmp/datasets/accepted")," for valid records"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/tmp/datasets/rejected")," for invalid records"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"/tmp/datasets/unresolved")," for unrecognized files")),(0,r.kt)("p",null,"When run on top of HDFS or any cloud warehouse, these datasets are also available as tables."))}m.isMDXComponent=!0}}]);