"use strict";(self.webpackChunkstarlake=self.webpackChunkstarlake||[]).push([[6868],{15680:(e,t,a)=>{a.d(t,{xA:()=>c,yg:()=>g});var r=a(96540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var i=r.createContext({}),u=function(e){var t=r.useContext(i),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},c=function(e){var t=u(e.components);return r.createElement(i.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(a),p=n,g=d["".concat(i,".").concat(p)]||d[p]||m[p]||o;return a?r.createElement(g,s(s({ref:t},c),{},{components:a})):r.createElement(g,s({ref:t},c))}));function g(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=p;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[d]="string"==typeof e?e:n,s[1]=l;for(var u=2;u<o;u++)s[u]=a[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},19365:(e,t,a)=>{a.d(t,{A:()=>s});var r=a(96540),n=a(20053);const o={tabItem:"tabItem_Ymn6"};function s(e){let{children:t,hidden:a,className:s}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.A)(o.tabItem,s),hidden:a},t)}},11470:(e,t,a)=>{a.d(t,{A:()=>k});var r=a(9668),n=a(96540),o=a(20053),s=a(23104),l=a(56347),i=a(57485),u=a(31682),c=a(89466);function d(e){return function(e){return n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:r,default:n}}=e;return{value:t,label:a,attributes:r,default:n}}))}function m(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??d(a);return function(e){const t=(0,u.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function p(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function g(e){let{queryString:t=!1,groupId:a}=e;const r=(0,l.W6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,i.aZ)(o),(0,n.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(r.location.search);t.set(o,e),r.replace({...r.location,search:t.toString()})}),[o,r])]}function f(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,o=m(e),[s,l]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=a.find((e=>e.default))??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:o}))),[i,u]=g({queryString:a,groupId:r}),[d,f]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,o]=(0,c.Dv)(a);return[r,(0,n.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:r}),h=(()=>{const e=i??d;return p({value:e,tabValues:o})?e:null})();(0,n.useLayoutEffect)((()=>{h&&l(h)}),[h]);return{selectedValue:s,selectValue:(0,n.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),u(e),f(e)}),[u,f,o]),tabValues:o}}var h=a(92303);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function b(e){let{className:t,block:a,selectedValue:l,selectValue:i,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,s.a_)(),m=e=>{const t=e.currentTarget,a=c.indexOf(t),r=u[a].value;r!==l&&(d(t),i(r))},p=e=>{let t=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;t=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;t=c[a]??c[c.length-1];break}}t?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:s}=e;return n.createElement("li",(0,r.A)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>c.push(e),onKeyDown:p,onClick:m},s,{className:(0,o.A)("tabs__item",y.tabItem,s?.className,{"tabs__item--active":l===t})}),a??t)})))}function v(e){let{lazy:t,children:a,selectedValue:r}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function w(e){const t=f(e);return n.createElement("div",{className:(0,o.A)("tabs-container",y.tabList)},n.createElement(b,(0,r.A)({},e,t)),n.createElement(v,(0,r.A)({},e,t)))}function k(e){const t=(0,h.A)();return n.createElement(w,(0,r.A)({key:String(t)},e))}},99273:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>u});var r=a(9668),n=(a(96540),a(15680));a(11470),a(19365);const o={},s="Quickstart",l={unversionedId:"quickstart",id:"version-1.1.0/quickstart",title:"Quickstart",description:"Download",source:"@site/versioned_docs/version-1.1.0/0300-quickstart.mdx",sourceDirName:".",slug:"/quickstart",permalink:"/starlake/docs/1.1.0/quickstart",draft:!1,editUrl:"https://github.com/starlake-ai/starlake/edit/master/docs/versioned_docs/version-1.1.0/0300-quickstart.mdx",tags:[],version:"1.1.0",sidebarPosition:300,frontMatter:{},sidebar:"starlakeSidebar",previous:{title:"VS Code extension",permalink:"/starlake/docs/1.1.0/setup/vscode"},next:{title:"User guide",permalink:"/starlake/docs/1.1.0/category/user-guide"}},i={},u=[{value:"Download",id:"download",level:2},{value:"Starbake Commerce",id:"starbake-commerce",level:2},{value:"Generate sample data",id:"generate-sample-data",level:2},{value:"Configure the connection to your datawarehouse",id:"configure-the-connection-to-your-datawarehouse",level:2},{value:"Infer data schemas",id:"infer-data-schemas",level:2},{value:"Load",id:"load",level:2},{value:"Transform",id:"transform",level:2},{value:"Going further",id:"going-further",level:2}],c={toc:u},d="wrapper";function m(e){let{components:t,...o}=e;return(0,n.yg)(d,(0,r.A)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"quickstart"},"Quickstart"),(0,n.yg)("h2",{id:"download"},"Download"),(0,n.yg)("p",null,"The project begins by collecting raw operational data from various domains, including digital transactions, customer interactions, inventory management,\nand supplier relationships."),(0,n.yg)("p",null,(0,n.yg)("a",{parentName:"p",href:"setup/install"},"Install starlake CLI"),",  clone the project and get started, run the following commands:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/starlake-ai/StarBake.git\ncd starbake\n")),(0,n.yg)("h2",{id:"starbake-commerce"},"Starbake Commerce"),(0,n.yg)("p",null,"To illustrate Starlake features, we will use the StarBake github project.\nStarBake is a fictional & demonstrative project designed to showcase the usage of Starlake for data loading, transformation and analytics\nin an e-commerce bakery business setting."),(0,n.yg)("mermaid",{value:"classDiagram\n    Customers --|> CustomerLifetimeValue: uses\n    Orders --|> CustomerLifetimeValue: uses\n    Orders --|> ProductPerformance: uses\n    Products --|> ProductPerformance: uses\n    Products --|> ProductProfitability: uses\n    Ingredients --|> ProductProfitability: uses\n    CustomerLifetimeValue --|> HighValueCustomers: uses\n    ProductPerformance --|> TopSellingProducts: uses\n    ProductProfitability --|> MostProfitableProducts: uses\n    TopSellingProducts --|> TopSellingProfitableProducts: uses\n    MostProfitableProducts --|> TopSellingProfitableProducts: uses\n\n    class CustomerLifetimeValue {\n        +customer_id: integer\n        +customer_full_name: string\n        +customer_join_date: date\n        +total_spend_to_date: decimal\n        +average_spend_per_order: decimal\n        +frequency_of_orders: integer\n    }\n\n    class ProductPerformance {\n        +product_id: integer\n        +product_name: string\n        +total_units_sold: integer\n        +total_revenue: decimal\n        +average_revenue_per_unit: decimal\n    }\n\n    class ProductProfitability {\n        +product_id: integer\n        +product_name: string\n        +profit_margin_per_product: decimal\n    }\n\n    class HighValueCustomers {\n        +customer_id: integer\n        +customer_full_name: string\n        +lifetime_value: decimal\n    }\n\n    class TopSellingProducts {\n        +product_id: integer\n        +product_name: string\n        +units_sold: integer\n        +revenue: decimal\n    }\n\n    class MostProfitableProducts {\n        +product_id: integer\n        +product_name: string\n        +profit_margin: decimal\n    }\n\n    class TopSellingProfitableProducts {\n        +product_id: integer\n        +product_name: string\n        +units_sold: integer\n        +revenue: decimal\n        +profit_margin: decimal\n    }\n\n"}),(0,n.yg)("h2",{id:"generate-sample-data"},"Generate sample data"),(0,n.yg)("p",null,"Since we don't have any data yet, we will generate some sample data using the ",(0,n.yg)("inlineCode",{parentName:"p"},"_scripts/dummy_data_generator.py")," script.\nThs will allow us to get started with the project and start building our data platform."),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"$ pip install faker\n$ python _scripts/dummy_data_generator.py\n")),(0,n.yg)("h2",{id:"configure-the-connection-to-your-datawarehouse"},"Configure the connection to your datawarehouse"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml"},'\napplication:\n  loader: "native" # "spark" (default) or "native"\n  connectionRef: starbake-bigquery # of sparkLocal (see below)\n\n  connections:\n    starbake-bigquery: # connection to bigquery\n      type: "bigquery"\n      options:\n        location: europe-west1\n        authType: "APPLICATION_DEFAULT"\n        authScopes: "https://www.googleapis.com/auth/cloud-platform"\n        writeMethod: "direct"\n    sparkLocal:\n        type: "fs" # Connection to local file system (parquet files)\n')),(0,n.yg)("h2",{id:"infer-data-schemas"},"Infer data schemas"),(0,n.yg)("p",null,"We will use these fake data files to load the files into our datawarehouse. But we first need to create a YAML description of the structure of the file."),(0,n.yg)("p",null,"Instead of writing them by hand, we will use the ",(0,n.yg)("inlineCode",{parentName:"p"},"infer-schema"),"command to have those YAML description files generated:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"$ cd $HOME/userguide\n\n$ starlake infer-schema                               \\\n    --domain starbake                                 \\\n    --table Customers                                 \\\n    --input _data/day_1/customers_1.csv               \\\n    --write OVERWRITE                                 \\\n    --with-header\n\n$ starlake infer-schema                               \\\n    --domain starbake                                 \\\n    --table Ingredients                               \\\n    --input _data/day_1/ingredients_1.csv             \\\n    --write APPEND                                    \\\n    --with-header\n\n$ starlake infer-schema                              \\\n    --domain starbake                                \\\n    --table Orders                                   \\\n    --input _data/day_1/orders_1.csv                 \\\n    --write APPEND                                   \\\n    --with-header\n\n$ starlake infer-schema                              \\\n    --domain starbake                                \\\n    --table Products                                 \\\n    --input _data/day_1/products_1.csv               \\\n    --write APPEND                                   \\\n    --with-header\n\n")),(0,n.yg)("p",null,"The YAML schema descriptors are now present in the ",(0,n.yg)("inlineCode",{parentName:"p"},"metadata/load")," folder"),(0,n.yg)("h2",{id:"load"},"Load"),(0,n.yg)("p",null,"To load the data into the datawarehouse, we will use the ",(0,n.yg)("inlineCode",{parentName:"p"},"load")," command:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ starlake load\n\n")),(0,n.yg)("p",null,"That's it. We just loaded our first data into the datawarehouse."),(0,n.yg)("p",null,"After adding referential integrity constraints, we can improve the performance of our queries or just display\nthe tables relationships using the ",(0,n.yg)("inlineCode",{parentName:"p"},"table-dependencies")," command:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"\n$ starlake table-dependencies\n\n")),(0,n.yg)("p",null,(0,n.yg)("img",{src:a(47556).A,width:"1474",height:"824"})),(0,n.yg)("h2",{id:"transform"},"Transform"),(0,n.yg)("p",null,"We will now build our first datamart. A data mart is a set of tables that are optimized for a specific use case.\nWe will build two data marts:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"the first one (customers) will be used to compute the customer lifetime value"),(0,n.yg)("li",{parentName:"ul"},"the second one (products) will be used to compute the product profitability")),(0,n.yg)("p",null,"In the ",(0,n.yg)("inlineCode",{parentName:"p"},"metadata/transform")," folder, we can two directories, one for each datamart and define the SQL transforamtions to obtain the desired datamarts."),(0,n.yg)("p",null,"To run the transformations, we will use the ",(0,n.yg)("inlineCode",{parentName:"p"},"transform")," command:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"$ starbake transform --name Customers.CustomerLifetimeValue \n$ starbake transform --name Customers.HighValueCustomers \n\n\n$ starbake transform --recursive --name Products.TopSellingProfitableProducts \n\n")),(0,n.yg)("p",null,"By specifying recursive, we are telling Starlake to run all the transformations that are required to build the specified datamart.\nStarlake will in addition also run teh following command automatically by inferring the data lineage from the SQL requests:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"$ starbake transform --name Products.ProductProfitability \n$ starbake transform --name Products.MostProfitableProducts \n\n$ starbake transform --name Products.ProductPerformance \n\n$ starbake transform --name Products.TopSellingProducts \n")),(0,n.yg)("p",null,"To previewthe lineage of the data, we can use the ",(0,n.yg)("inlineCode",{parentName:"p"},"lineage")," command:"),(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-bash"},"$ starlake lineage --name Products.TopSellingProfitableProducts\n")),(0,n.yg)("p",null,(0,n.yg)("img",{src:a(21355).A,width:"2764",height:"444"})),(0,n.yg)("p",null,"That's it, notice that we are not required to specify the output table name, it is automatically inferred from the file name by default."),(0,n.yg)("h2",{id:"going-further"},"Going further"),(0,n.yg)("p",null,"Check the user guide to see how you can easily:"),(0,n.yg)("ul",null,(0,n.yg)("li",{parentName:"ul"},"schedule the data loading and transformation tasks"),(0,n.yg)("li",{parentName:"ul"},"monitor the data platform"),(0,n.yg)("li",{parentName:"ul"},"run the data quality checks"),(0,n.yg)("li",{parentName:"ul"},"expose your data catalog and data marts to your data consumers through a website")))}m.isMDXComponent=!0},47556:(e,t,a)=>{a.d(t,{A:()=>r});const r=a.p+"assets/images/starbake-constraints-d96f7374cc294840df9f50aba7dac4c5.png"},21355:(e,t,a)=>{a.d(t,{A:()=>r});const r=a.p+"assets/images/starbake-tasks-deps-bad91d7cd8af101d9522c975be2d4162.png"}}]);