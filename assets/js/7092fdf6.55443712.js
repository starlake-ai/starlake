"use strict";(self.webpackChunkstarlake=self.webpackChunkstarlake||[]).push([[4185],{66488:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>i});var n=a(74848),d=a(28453);const r={},s="Autoload",o={id:"guides/load/autoload",title:"Autoload",description:"Datawarehouses are organized around schemas where tables are grouped.",source:"@site/versioned_docs/version-1.2.0/0300-guides/200-load/105-autoload.mdx",sourceDirName:"0300-guides/200-load",slug:"/guides/load/autoload",permalink:"/starlake/docs/guides/load/autoload",draft:!1,unlisted:!1,editUrl:"https://github.com/starlake-ai/starlake/edit/master/docs/versioned_docs/version-1.2.0/0300-guides/200-load/105-autoload.mdx",tags:[],version:"1.2.0",sidebarPosition:105,frontMatter:{},sidebar:"starlakeSidebar",previous:{title:"Tutorial",permalink:"/starlake/docs/guides/load/tutorial"},next:{title:"Load",permalink:"/starlake/docs/guides/load/load"}},l={},i=[{value:"Query the loaded tables",id:"query-the-loaded-tables",level:2},{value:"How autoload detects the format of the files",id:"how-autoload-detects-the-format-of-the-files",level:2}];function c(e){const t={admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,d.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"autoload",children:"Autoload"}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["Datawarehouses are organized around schemas where tables are grouped.\nDepending on the database, a database ",(0,n.jsx)(t.code,{children:"schema"})," can be called ",(0,n.jsx)(t.code,{children:"schema"})," or ",(0,n.jsx)(t.code,{children:"catalog"})," or ",(0,n.jsx)(t.code,{children:"dataset"}),".\nIn starlake, we use the term ",(0,n.jsx)(t.code,{children:"domain"})," to designate  a ",(0,n.jsx)(t.code,{children:"schema"}),", ",(0,n.jsx)(t.code,{children:"catalog"})," or ",(0,n.jsx)(t.code,{children:"dataset"}),"."]})}),"\n",(0,n.jsx)(t.p,{children:"The conventions used by the autoload command are:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["files are stored under the incoming directory and named after the domain and table they are loaded into: ",(0,n.jsx)(t.code,{children:"$SL_ROOT/incoming/<domain>/<table><suffix>.<extension>"})]}),"\n",(0,n.jsx)(t.li,{children:"The target schema is named after the domain names"}),"\n",(0,n.jsx)(t.li,{children:"The target tables are named after the file name without the extension or suffix."}),"\n",(0,n.jsxs)(t.li,{children:["The suffix is used to differentiate between files that are loaded in full ",(0,n.jsx)(t.code,{children:"overwrite"})," mode and those loaded in ",(0,n.jsx)(t.code,{children:"append"})," mode.\nFor example ",(0,n.jsx)(t.code,{children:"order_20240228.json"})," and ",(0,n.jsx)(t.code,{children:"order_line_20240228.csv"})," are respectively loaded into the same table ",(0,n.jsx)(t.code,{children:"order"})," and ",(0,n.jsx)(t.code,{children:"order_line"}),"."]}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-plaintext",metastring:'title="directory structure example before running autoload"',children:"incoming\n\u2514\u2500\u2500 starbake\n    \u251c\u2500\u2500 product.xml\n    \u251c\u2500\u2500 order_20240228.csv\n    \u2514\u2500\u2500 order_line_20240228.csv\nmetadata/load\n"})}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsxs)(t.p,{children:["After running the ",(0,n.jsx)(t.code,{children:"autoload"})," command:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",children:"starlake autoload\n"})}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(t.p,{children:"Since we did not specify the target datawarehouse but the local filesystem as the target, the directory structure will be updated as follows."}),"\n",(0,n.jsx)(t.p,{children:"In real life, the target datawarehouse will be a database and the tables will be created in the target database."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-plaintext",metastring:'title="table schemas inferred from the directory structure"',children:"incoming\n\u2514\u2500\u2500 starbake\n    \u251c\u2500\u2500 product.xml\n    \u251c\u2500\u2500 order_20240228.csv\n    \u2514\u2500\u2500 order_line_20240228.csv\nmetadata/load\n\u2514\u2500\u2500 starbake\n    \u251c\u2500\u2500 _config.sl.yml\n    \u251c\u2500\u2500 product.sl.yml\n    \u2514\u2500\u2500 order.sl.yml\ndatasets/\n\u251c\u2500\u2500 archive         # files are moved to the archive directory after being loaded\n\u2502   \u2514\u2500\u2500 starbake\n\u251c\u2500\u2500 ingesting       # files are moved to the ingesting directory before being loaded\n\u2502   \u2514\u2500\u2500 starbake\n\u251c\u2500\u2500 replay          # invalid records that need to be replayed are moved\n\u2502   \u2514\u2500\u2500 starbake    # in the  replay directory\n\u251c\u2500\u2500 stage           # files are moved to the stage directory before being loaded\n\u2502   \u2514\u2500\u2500 starbake\n\u2514\u2500\u2500 unresolved      # files with names that do not match a valid pattern\n                    # are moved to the unresolved directory.\n\n"})}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsxs)(t.p,{children:["When running against Spark Locally, the tables are created in the ",(0,n.jsx)(t.code,{children:"datasets"})," directory.\nWhen running against a real datawarehouse, the tables are created in the target database."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-shell",metastring:'title="Extra files when running autoload against spark locally"',children:"datasets/\n\u251c\u2500\u2500 starbake.db     # files are loaded as tables into the starbake domain\n\u2502   \u251c\u2500\u2500 order\n\u2502   \u251c\u2500\u2500 order_line\n\u2502   \u2514\u2500\u2500 product\n\u251c\u2500\u2500 audit.db        # audit tables are created in the audit schema\n\u2502   \u251c\u2500\u2500 audit\n\u2502   \u2514\u2500\u2500 rejected\n\n\n"})}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"_config.sl.yml"})," file is a configuration file that contains the domain configuration and describe how the domain will be created in the target database."]}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsxs)(t.p,{children:["The ",(0,n.jsx)(t.code,{children:"<table>.sl.yml"})," file contains the table configuration and describes how files are parsed, validated and loaded into the target database."]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"query-the-loaded-tables",children:"Query the loaded tables"}),"\n",(0,n.jsx)(t.h2,{id:"how-autoload-detects-the-format-of-the-files",children:"How autoload detects the format of the files"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"It expects the file to be named after the table it will be loaded into."}),"\n",(0,n.jsxs)(t.li,{children:["It uses the file extension to detect the format of the file. The supported formats are ",(0,n.jsx)(t.code,{children:"csv"}),",",(0,n.jsx)(t.code,{children:"psv"}),",",(0,n.jsx)(t.code,{children:"dsv"}),", ",(0,n.jsx)(t.code,{children:"json"}),", ",(0,n.jsx)(t.code,{children:"xml"})]}),"\n",(0,n.jsx)(t.li,{children:"It uses the first line of the file to detect the separator and the number of columns."}),"\n",(0,n.jsx)(t.li,{children:"In the case of CSV files, it uses the first line of the file to detect the column names."}),"\n",(0,n.jsx)(t.li,{children:"It uses the whole file content to detect the column types."}),"\n",(0,n.jsxs)(t.li,{children:["In the case of JSON file, if is a considered a JSON_ARRAY file if the first character is ",(0,n.jsx)(t.code,{children:"["})," and a JSON file if the first character is ",(0,n.jsx)(t.code,{children:"{"}),"."]}),"\n",(0,n.jsx)(t.li,{children:"In the case of XML file, it uses the first line of the file to detect the root element and the number of columns."}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"XML files are expected to have the following structure:"}),"\n",(0,n.jsx)("br",{}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-xml",children:'<?xml> # optional xml declaration\n<root>\n    <row attr1="value1" >\n        <column1>value1</column1>\n        <column2>value2</column2>\n        ...\n    </row>\n<root>\n\n'})})]})}function h(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>s,x:()=>o});var n=a(96540);const d={},r=n.createContext(d);function s(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:s(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);