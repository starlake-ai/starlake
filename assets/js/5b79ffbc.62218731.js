"use strict";(self.webpackChunkstarlake=self.webpackChunkstarlake||[]).push([[3491],{15680:(e,a,t)=>{t.d(a,{xA:()=>s,yg:()=>g});var n=t(96540);function i(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function o(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function l(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?o(Object(t),!0).forEach((function(a){i(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function r(e,a){if(null==e)return{};var t,n,i=function(e,a){if(null==e)return{};var t,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||(i[t]=e[t]);return i}(e,a);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var d=n.createContext({}),m=function(e){var a=n.useContext(d),t=a;return e&&(t="function"==typeof e?e(a):l(l({},a),e)),t},s=function(e){var a=m(e.components);return n.createElement(d.Provider,{value:a},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,i=e.mdxType,o=e.originalType,d=e.parentName,s=r(e,["components","mdxType","originalType","parentName"]),p=m(t),u=i,g=p["".concat(d,".").concat(u)]||p[u]||c[u]||o;return t?n.createElement(g,l(l({ref:a},s),{},{components:t})):n.createElement(g,l({ref:a},s))}));function g(e,a){var t=arguments,i=a&&a.mdxType;if("string"==typeof e||i){var o=t.length,l=new Array(o);l[0]=u;var r={};for(var d in a)hasOwnProperty.call(a,d)&&(r[d]=a[d]);r.originalType=e,r[p]="string"==typeof e?e:i,l[1]=r;for(var m=2;m<o;m++)l[m]=t[m];return n.createElement.apply(null,l)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},14489:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>r,toc:()=>m});var n=t(9668),i=(t(96540),t(15680));const o={},l="Load",r={unversionedId:"guides/load/load",id:"version-1.2.0/guides/load/load",title:"Load",description:"You'll use Load instead of Autoload when:",source:"@site/versioned_docs/version-1.2.0/0300-guides/200-load/106-load.mdx",sourceDirName:"0300-guides/200-load",slug:"/guides/load/load",permalink:"/starlake/docs/guides/load/load",draft:!1,editUrl:"https://github.com/starlake-ai/starlake/edit/master/docs/versioned_docs/version-1.2.0/0300-guides/200-load/106-load.mdx",tags:[],version:"1.2.0",sidebarPosition:106,frontMatter:{},sidebar:"starlakeSidebar",previous:{title:"Autoload",permalink:"/starlake/docs/guides/load/autoload"},next:{title:"Load DSV files",permalink:"/starlake/docs/guides/load/csv"}},d={},m=[{value:"Domain configuration",id:"domain-configuration",level:2},{value:"Table configuration",id:"table-configuration",level:2}],s={toc:m},p="wrapper";function c(e){let{components:a,...t}=e;return(0,i.yg)(p,(0,n.A)({},s,t,{components:a,mdxType:"MDXLayout"}),(0,i.yg)("h1",{id:"load"},"Load"),(0,i.yg)("p",null,"You'll use Load instead of Autoload when:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"You want to load data from a file when the separator cannot be detected easily (e.g. a file with a multichar separator)"),(0,i.yg)("li",{parentName:"ul"},"You want to load the data from a folders that are not in the standard ",(0,i.yg)("inlineCode",{parentName:"li"},"incoming")," folder or that are not named after the domain name")),(0,i.yg)("p",null,"You may use a different folder location for your incoming files by setting the ",(0,i.yg)("inlineCode",{parentName:"p"},"application.incoming"),"  variable in the ",(0,i.yg)("inlineCode",{parentName:"p"},"metadata/application.sl.yml")," file."),(0,i.yg)("br",null),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml",metastring:'title="metadata/application.sl.yml"',title:'"metadata/application.sl.yml"'},"application:\n  incoming: /path/to/incoming\n")),(0,i.yg)("br",null),(0,i.yg)("p",null,"You may also use a different incoming location per environment by setting the ",(0,i.yg)("inlineCode",{parentName:"p"},"incoming_path")," variable in the ",(0,i.yg)("inlineCode",{parentName:"p"},"metadata/env.<env>.yml")," file."),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml",metastring:'title="metadata/env.<env>.yml"',title:'"metadata/env.<env>.yml"'},"incoming_path: /path/to/incoming\n")),(0,i.yg)("br",null),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml",metastring:'title="metadata/application.sl.yml"',title:'"metadata/application.sl.yml"'},"application:\n  incoming: {{incoming_path}}\n")),(0,i.yg)("h2",{id:"domain-configuration"},"Domain configuration"),(0,i.yg)("p",null,"We first need to define for each domain where the files will be loaded from.\nThis is done by creating a domain configuration file that describe where the ",(0,i.yg)("inlineCode",{parentName:"p"},"load")," command should look for the files to load"),(0,i.yg)("br",null),(0,i.yg)("p",null,"In this case the load command will look in the directory ",(0,i.yg)("inlineCode",{parentName:"p"},"{{incoming_path}}/starbake")," where ",(0,i.yg)("inlineCode",{parentName:"p"},"{{incoming_path}}")," is an environment variable\ndefined in the ",(0,i.yg)("inlineCode",{parentName:"p"},"metadata/env.sl.yml")," file and that may be redefined for each environment (dev, test, prod) in the ",(0,i.yg)("inlineCode",{parentName:"p"},"metadata/env.dev.yml")," file for example."),(0,i.yg)("br",null),(0,i.yg)("pre",null,(0,i.yg)("code",{parentName:"pre",className:"language-yaml",metastring:'title="metadata/load/<domain>/_config.sl.yml"',title:'"metadata/load/<domain>/_config.sl.yml"'},'load:\n  metadata:\n    directory: "{{incoming_path}}/starbake"\n')),(0,i.yg)("br",null),(0,i.yg)("p",null,"Since the directory is set at the domain level, this means that all files loaded for this domain, will be loaded from this directory."),(0,i.yg)("h2",{id:"table-configuration"},"Table configuration"),(0,i.yg)("p",null,"We then need to define for each table the file format and the file name pattern that the ",(0,i.yg)("inlineCode",{parentName:"p"},"load")," command should look for:"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"csv"},"Load CSV files")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"json"},"Load JSON files")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"xml"},"Load XML files")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("a",{parentName:"li",href:"position"},"Load fixed position files"))))}c.isMDXComponent=!0}}]);