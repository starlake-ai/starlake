"use strict";(self.webpackChunkstarlake=self.webpackChunkstarlake||[]).push([[3306],{95096:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>n,metadata:()=>c,toc:()=>l});var r=s(74848),i=s(28453);const n={sidebar_position:250,title:"parquet2csv"},d=void 0,c={id:"cli/parquet2csv",title:"parquet2csv",description:"Synopsis",source:"@site/versioned_docs/version-1.2.0/0800-cli/parquet2csv.md",sourceDirName:"0800-cli",slug:"/cli/parquet2csv",permalink:"/starlake/docs/cli/parquet2csv",draft:!1,unlisted:!1,editUrl:"https://github.com/starlake-ai/starlake/edit/master/docs/versioned_docs/version-1.2.0/0800-cli/parquet2csv.md",tags:[],version:"1.2.0",sidebarPosition:250,frontMatter:{sidebar_position:250,title:"parquet2csv"},sidebar:"starlakeSidebar",previous:{title:"migrate",permalink:"/starlake/docs/cli/migrate"},next:{title:"secure",permalink:"/starlake/docs/cli/secure"}},o={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Description",id:"description",level:2},{value:"Parameters",id:"parameters",level:2}];function a(e){const t={code:"code",em:"em",h2:"h2",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.strong,{children:"starlake parquet2csv [options]"})}),"\n",(0,r.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(t.p,{children:"Convert parquet files to CSV.\nThe folder hierarchy should be in the form /input_folder/domain/schema/part*.parquet\nOnce converted the csv files are put in the folder /output_folder/domain/schema.csv file\nWhen the specified number of output partitions is 1 then /output_folder/domain/schema.csv is the file containing the data\notherwise, it is a folder containing the part*.csv files.\nWhen output_folder is not specified, then the input_folder is used a the base output folder."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-shell",children:"starlake parquet2csv\n         --input_dir /tmp/datasets/accepted/\n         --output_dir /tmp/datasets/csv/\n         --domain sales\n         --schema orders\n         --option header=true\n         --option separator=,\n         --partitions 1\n         --write_mode overwrite\n"})}),"\n",(0,r.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Parameter"}),(0,r.jsx)(t.th,{children:"Cardinality"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["--input_dir:",(0,r.jsx)(t.code,{children:"<value>"})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.em,{children:"Required"})}),(0,r.jsx)(t.td,{children:"Full Path to input directory"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["--output_dir:",(0,r.jsx)(t.code,{children:"<value>"})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.em,{children:"Optional"})}),(0,r.jsx)(t.td,{children:"Full Path to output directory, if not specified, input_dir is used as output dir"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["--domain:",(0,r.jsx)(t.code,{children:"<value>"})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.em,{children:"Optional"})}),(0,r.jsx)(t.td,{children:"Domain name to convert. All schemas in this domain are converted. If not specified, all schemas of all domains are converted"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["--schema:",(0,r.jsx)(t.code,{children:"<value>"})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.em,{children:"Optional"})}),(0,r.jsx)(t.td,{children:"Schema name to convert. If not specified, all schemas are converted."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["--delete_source:",(0,r.jsx)(t.code,{children:"<value>"})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.em,{children:"Optional"})}),(0,r.jsx)(t.td,{children:"Should we delete source parquet files after conversion ?"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["--write_mode:",(0,r.jsx)(t.code,{children:"<value>"})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.em,{children:"Optional"})}),(0,r.jsx)(t.td,{children:"One of Set(OVERWRITE, APPEND)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["--options:",(0,r.jsx)(t.code,{children:"k1=v1,k2=v2..."})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.em,{children:"Optional"})}),(0,r.jsx)(t.td,{children:"Any Spark option to use (sep, delimiter, quote, quoteAll, escape, header ...)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsxs)(t.td,{children:["--partitions:",(0,r.jsx)(t.code,{children:"<value>"})]}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.em,{children:"Optional"})}),(0,r.jsx)(t.td,{children:"How many output partitions"})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>d,x:()=>c});var r=s(96540);const i={},n=r.createContext(i);function d(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);