"use strict";(self.webpackChunkstarlake=self.webpackChunkstarlake||[]).push([[5894],{15067:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>n,metadata:()=>c,toc:()=>o});var i=s(74848),r=s(28453);const n={sidebar_position:150,title:"extract-script"},l=void 0,c={id:"cli/extract-script",title:"extract-script",description:"Synopsis",source:"@site/versioned_docs/version-1.2.0/0800-cli/extract-script.md",sourceDirName:"0800-cli",slug:"/cli/extract-script",permalink:"/starlake/docs/cli/extract-script",draft:!1,unlisted:!1,editUrl:"https://github.com/starlake-ai/starlake/edit/master/docs/versioned_docs/version-1.2.0/0800-cli/extract-script.md",tags:[],version:"1.2.0",sidebarPosition:150,frontMatter:{sidebar_position:150,title:"extract-script"},sidebar:"starlakeSidebar",previous:{title:"extract-schema",permalink:"/starlake/docs/cli/extract-schema"},next:{title:"iam-policies",permalink:"/starlake/docs/cli/iam-policies"}},a={},o=[{value:"Synopsis",id:"synopsis",level:2},{value:"Description",id:"description",level:2},{value:"Parameters",id:"parameters",level:2}];function d(e){const t={a:"a",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.strong,{children:"starlake extract-script [options]"})}),"\n",(0,i.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(t.p,{children:"For domain extraction, the schemas should at least, specify :"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"a table name (schemas.name)"}),"\n",(0,i.jsx)(t.li,{children:"a file pattern (schemas.pattern) which is used as the export file base name"}),"\n",(0,i.jsx)(t.li,{children:"a write mode (schemas.metadata.write): APPEND or OVERWRITE"}),"\n",(0,i.jsx)(t.li,{children:"a delta column (schemas.merge.timestamp) if in APPEND mode : the default column which is used to determine new rows for each exports"}),"\n",(0,i.jsx)(t.li,{children:"the columns to extract (schemas.attributes.name*)"}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["You also have to provide a Mustache (",(0,i.jsx)(t.a,{href:"http://mustache.github.io/mustache.5.html",children:"http://mustache.github.io/mustache.5.html"}),") template file."]}),"\n",(0,i.jsx)(t.p,{children:"In there you'll write your extraction export process (sqlplus for Oracle, pgsql for PostgreSQL as an example).\nIn that template you can use the following parameters:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"table_name  -> the table to export"}),"\n",(0,i.jsx)(t.li,{children:"delimiter   -> the resulting dsv file delimiter"}),"\n",(0,i.jsxs)(t.li,{children:["columns     -> the columns to export\ncolumns is a Mustache map, it gives you access, for each column, to:","\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"name               -> the column name"}),"\n",(0,i.jsx)(t.li,{children:'trailing_col_char  -> the separator to append to the column (, if there are more columns to come, "" otherwise)\nHere is an example how to use it in a template:'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-sql",children:"                              SELECT\n                              {{#columns}}\n                              TO_CHAR({{name}}){{trailing_col_char}}\n                              {{/columns}}\n                              FROM\n                              {{table_name}};\n"})}),"\n",(0,i.jsx)(t.p,{children:"full_export -> if the export is a full or delta export (the logic is to be implemented in your script)"}),"\n",(0,i.jsx)(t.h2,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Parameter"}),(0,i.jsx)(t.th,{children:"Cardinality"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["--extract-script:",(0,i.jsx)(t.code,{children:"<value>"})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:"Optional"})}),(0,i.jsx)(t.td,{})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["--domain:",(0,i.jsx)(t.code,{children:"domain1,domain2 ..."})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:"Optional"})}),(0,i.jsx)(t.td,{children:"The domain list for which to generate extract scripts"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["--template:",(0,i.jsx)(t.code,{children:"<value>"})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:"Required"})}),(0,i.jsx)(t.td,{children:"Script template dir"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["--audit-schema:",(0,i.jsx)(t.code,{children:"<value>"})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:"Required"})}),(0,i.jsx)(t.td,{children:"Audit DB that will contain the audit export table"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsxs)(t.td,{children:["--delta-column:",(0,i.jsx)(t.code,{children:"<value>"})]}),(0,i.jsx)(t.td,{children:(0,i.jsx)(t.em,{children:"Optional"})}),(0,i.jsx)(t.td,{children:"The default date column used to determine new rows to export. Overrides config database-extractor.default-column value."})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>l,x:()=>c});var i=s(96540);const r={},n=i.createContext(r);function l(e){const t=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(n.Provider,{value:t},e.children)}}}]);