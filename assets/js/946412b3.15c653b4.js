"use strict";(self.webpackChunkstarlake=self.webpackChunkstarlake||[]).push([[658],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>f});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var d=n.createContext({}),m=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},p=function(e){var t=m(e.components);return n.createElement(d.Provider,{value:t},e.children)},c="mdxType",s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,l=e.originalType,d=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),c=m(a),u=i,f=c["".concat(d,".").concat(u)]||c[u]||s[u]||l;return a?n.createElement(f,o(o({ref:t},p),{},{components:a})):n.createElement(f,o({ref:t},p))}));function f(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=a.length,o=new Array(l);o[0]=u;var r={};for(var d in t)hasOwnProperty.call(t,d)&&(r[d]=t[d]);r.originalType=e,r[c]="string"==typeof e?e:i,o[1]=r;for(var m=2;m<l;m++)o[m]=a[m];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},55805:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>s,frontMatter:()=>l,metadata:()=>r,toc:()=>m});var n=a(87462),i=(a(67294),a(3905));const l={},o="Load",r={unversionedId:"guides/load/load",id:"guides/load/load",title:"Load",description:"You'll use Load instead of Autoload when:",source:"@site/docs/0300-guides/200-load/106-load.mdx",sourceDirName:"0300-guides/200-load",slug:"/guides/load/load",permalink:"/starlake/docs/next/guides/load/load",draft:!1,editUrl:"https://github.com/starlake-ai/starlake/edit/master/docs/docs/0300-guides/200-load/106-load.mdx",tags:[],version:"current",sidebarPosition:106,frontMatter:{},sidebar:"starlakeSidebar",previous:{title:"Autoload",permalink:"/starlake/docs/next/guides/load/autoload"},next:{title:"Load DSV files",permalink:"/starlake/docs/next/guides/load/csv"}},d={},m=[{value:"Domain configuration",id:"domain-configuration",level:2},{value:"Table configuration",id:"table-configuration",level:2}],p={toc:m},c="wrapper";function s(e){let{components:t,...a}=e;return(0,i.kt)(c,(0,n.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"load"},"Load"),(0,i.kt)("p",null,"You'll use Load instead of Autoload when:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"You want to load data from a file when the separator cannot be detected easily (e.g. a file with a multichar separator)"),(0,i.kt)("li",{parentName:"ul"},"You want to load the data from a folders that are not in the standard ",(0,i.kt)("inlineCode",{parentName:"li"},"incoming")," folder or that are not named after the domain name")),(0,i.kt)("p",null,"You may use a different folder location for your incoming files by setting the ",(0,i.kt)("inlineCode",{parentName:"p"},"application.incoming"),"  variable in the ",(0,i.kt)("inlineCode",{parentName:"p"},"metadata/application.sl.yml")," file."),(0,i.kt)("br",null),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="metadata/application.sl.yml"',title:'"metadata/application.sl.yml"'},"application:\n  incoming: /path/to/incoming\n")),(0,i.kt)("br",null),(0,i.kt)("p",null,"You may also use a different incoming location per environment by setting the ",(0,i.kt)("inlineCode",{parentName:"p"},"incoming_path")," variable in the ",(0,i.kt)("inlineCode",{parentName:"p"},"metadata/env.<env>.yml")," file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="metadata/env.<env>.yml"',title:'"metadata/env.<env>.yml"'},"incoming_path: /path/to/incoming\n")),(0,i.kt)("br",null),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="metadata/application.sl.yml"',title:'"metadata/application.sl.yml"'},"application:\n  incoming: {{incoming_path}}\n")),(0,i.kt)("h2",{id:"domain-configuration"},"Domain configuration"),(0,i.kt)("p",null,"We first need to define for each domain where the files will be loaded from.\nThis is done by creating a domain configuration file that describe where the ",(0,i.kt)("inlineCode",{parentName:"p"},"load")," command should look for the files to load"),(0,i.kt)("br",null),(0,i.kt)("p",null,"In this case the load command will look in the directory ",(0,i.kt)("inlineCode",{parentName:"p"},"{{incoming_path}}/starbake")," where ",(0,i.kt)("inlineCode",{parentName:"p"},"{{incoming_path}}")," is an environment variable\ndefined in the ",(0,i.kt)("inlineCode",{parentName:"p"},"metadata/env.sl.yml")," file and that may be redefined for each environment (dev, test, prod) in the ",(0,i.kt)("inlineCode",{parentName:"p"},"metadata/env.dev.yml")," file for example."),(0,i.kt)("br",null),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml",metastring:'title="metadata/load/<domain>/_config.sl.yml"',title:'"metadata/load/<domain>/_config.sl.yml"'},'load:\n  metadata:\n    directory: "{{incoming_path}}/starbake"\n')),(0,i.kt)("br",null),(0,i.kt)("p",null,"Since the directory is set at the domain level, this means that all files loaded for this domain, will be loaded from this directory."),(0,i.kt)("h2",{id:"table-configuration"},"Table configuration"),(0,i.kt)("p",null,"We then need to define for each table the file format and the file name pattern that the ",(0,i.kt)("inlineCode",{parentName:"p"},"load")," command should look for:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"csv"},"Load CSV files")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"json"},"Load JSON files")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"xml"},"Load XML files")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"position"},"Load fixed position files")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"binary"},"Load Binary files"))))}s.isMDXComponent=!0}}]);