"use strict";(self.webpackChunkstarlake=self.webpackChunkstarlake||[]).push([[161],{3905:(e,t,a)=>{a.d(t,{Zo:()=>i,kt:()=>f});var r=a(67294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function s(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var u=r.createContext({}),c=function(e){var t=r.useContext(u),a=t;return e&&(a="function"==typeof e?e(t):s(s({},t),e)),a},i=function(e){var t=c(e.components);return r.createElement(u.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,u=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),m=c(a),p=n,f=m["".concat(u,".").concat(p)]||m[p]||d[p]||o;return a?r.createElement(f,s(s({ref:t},i),{},{components:a})):r.createElement(f,s({ref:t},i))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,s=new Array(o);s[0]=p;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l[m]="string"==typeof e?e:n,s[1]=l;for(var c=2;c<o;c++)s[c]=a[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,a)}p.displayName="MDXCreateElement"},85162:(e,t,a)=>{a.d(t,{Z:()=>s});var r=a(67294),n=a(86010);const o={tabItem:"tabItem_Ymn6"};function s(e){let{children:t,hidden:a,className:s}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.Z)(o.tabItem,s),hidden:a},t)}},74866:(e,t,a)=>{a.d(t,{Z:()=>w});var r=a(87462),n=a(67294),o=a(86010),s=a(12466),l=a(16550),u=a(91980),c=a(67392),i=a(50012);function m(e){return function(e){return n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:r,default:n}}=e;return{value:t,label:a,attributes:r,default:n}}))}function d(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??m(a);return function(e){const t=(0,c.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function p(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function f(e){let{queryString:t=!1,groupId:a}=e;const r=(0,l.k6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,u._X)(o),(0,n.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(r.location.search);t.set(o,e),r.replace({...r.location,search:t.toString()})}),[o,r])]}function b(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,o=d(e),[s,l]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=a.find((e=>e.default))??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:o}))),[u,c]=f({queryString:a,groupId:r}),[m,b]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,o]=(0,i.Nk)(a);return[r,(0,n.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:r}),h=(()=>{const e=u??m;return p({value:e,tabValues:o})?e:null})();(0,n.useLayoutEffect)((()=>{h&&l(h)}),[h]);return{selectedValue:s,selectValue:(0,n.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),c(e),b(e)}),[c,b,o]),tabValues:o}}var h=a(72389);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:t,block:a,selectedValue:l,selectValue:u,tabValues:c}=e;const i=[],{blockElementScrollPositionUntilNextRender:m}=(0,s.o5)(),d=e=>{const t=e.currentTarget,a=i.indexOf(t),r=c[a].value;r!==l&&(m(t),u(r))},p=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const a=i.indexOf(e.currentTarget)+1;t=i[a]??i[0];break}case"ArrowLeft":{const a=i.indexOf(e.currentTarget)-1;t=i[a]??i[i.length-1];break}}t?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":a},t)},c.map((e=>{let{value:t,label:a,attributes:s}=e;return n.createElement("li",(0,r.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>i.push(e),onKeyDown:p,onClick:d},s,{className:(0,o.Z)("tabs__item",y.tabItem,s?.className,{"tabs__item--active":l===t})}),a??t)})))}function g(e){let{lazy:t,children:a,selectedValue:r}=e;const o=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=o.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},o.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function k(e){const t=b(e);return n.createElement("div",{className:(0,o.Z)("tabs-container",y.tabList)},n.createElement(v,(0,r.Z)({},e,t)),n.createElement(g,(0,r.Z)({},e,t)))}function w(e){const t=(0,h.Z)();return n.createElement(k,(0,r.Z)({key:String(t)},e))}},9081:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>i,contentTitle:()=>u,default:()=>f,frontMatter:()=>l,metadata:()=>c,toc:()=>m});var r=a(87462),n=(a(67294),a(3905)),o=a(74866),s=a(85162);const l={},u="Extract",c={unversionedId:"user-guide/extract",id:"user-guide/extract",title:"Extract",description:"This step is optional. If you are not interested in extracting data fro your relational database, you can skip this step.",source:"@site/docs/0400-user-guide/055-extract.mdx",sourceDirName:"0400-user-guide",slug:"/user-guide/extract",permalink:"/starlake/docs/next/user-guide/extract",draft:!1,editUrl:"https://github.com/starlake-ai/starlake/edit/master/docs/docs/0400-user-guide/055-extract.mdx",tags:[],version:"current",sidebarPosition:55,frontMatter:{},sidebar:"starlakeSidebar",previous:{title:"Bootstrap project",permalink:"/starlake/docs/next/user-guide/bootstrap"},next:{title:"Infer schemas",permalink:"/starlake/docs/next/user-guide/infer-schema"}},i={},m=[],d={toc:m},p="wrapper";function f(e){let{components:t,...a}=e;return(0,n.kt)(p,(0,r.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"extract"},"Extract"),(0,n.kt)("p",null,"This step is optional. If you are not interested in extracting data fro your relational database, you can skip this step."),(0,n.kt)("p",null,"For the sake of the example, we will use the following database schema:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"create schema if not exists sales;\n\ncreate table if not exists sales.customers (\n    id varchar(255) not null,\n    signup timestamp not null,\n    contact varchar(255) not null,\n    birthdate date not null,\n    name1 varchar(255) not null,\n    name2 varchar(255) not null\n);\n\n")),(0,n.kt)("p",null,"and the following data:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-sql"},"\ninsert into sales.customers values('A009701', '2010-01-31 23:04:15', 'me@home.com', '1980-10-14', 'Donald', 'Obama');\ninsert into sales.customers values('B000001', '2016-12-01 09:56:02', 'you@land.com', '1980-10-14', 'Barack', 'Trump');\ninsert into sales.customers values('B000001', '2016-12-02 09:56:02', 'you@land.com', '1980-10-14', 'Barack', 'Trump');\ninsert into sales.customers values('B000002', '2016-12-02 09:56:02', 'you@land.com', '1980-10-14', 'Barack', 'Trump');\ninsert into sales.customers values('B000003', '2016-12-03 09:56:02', 'you@land.com', '1980-10-14', 'Barack', 'Trump');\ninsert into sales.customers values('B000012', '2016-12-03 09:56:02', 'you@land.com', '1980-10-14', 'Barack', 'Trump');\ninsert into sales.customers values('B000004', '2016-12-04 09:56:02', 'you@land.com', '1980-10-14', 'Barack', 'Trump');\ninsert into sales.customers values('B000005', '2016-12-05 09:56:02', 'you@land.com', '1980-10-14', 'Barack', 'Trump');\ninsert into sales.customers values('B000006', '2016-12-06 09:56:02', 'you@land.com', '1980-10-14', 'Barack', 'Trump');\ninsert into sales.customers values('B000007', '2016-12-07 09:56:02', 'you@land.com', '1980-10-14', 'Barack', 'Trump');\ninsert into sales.customers values('B000008', '2016-12-08 09:56:02', 'you@land.com', '1980-10-14', 'Barack', 'Trump');\ninsert into sales.customers values('B000009', '2016-12-09 09:56:02', 'you@land.com', '1980-10-14', 'Barack', 'Trump');\ninsert into sales.customers values('B000010', '2016-12-10 09:56:02', 'you@land.com', '1980-10-14', 'Barack', 'Trump');\ninsert into sales.customers values('B000011', '2016-12-11 09:56:02', 'you@land.com', '1980-10-14', 'Barack', 'Trump');\n\n")),(0,n.kt)("p",null,"We first need to create a connection to the database and select the tables we wish to extract data from.\ndefine the following connection in the metadata.sl.yml file depending on the database you are using:"),(0,n.kt)(o.Z,{mdxType:"Tabs"},(0,n.kt)(s.Z,{value:"postgres",label:"PostgreSQL",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},'\napplication:\n  connectionRef: "pg-adventure-works-db"\n  connections:\n    pg-adventure-works-db:\n      type: "jdbc"\n      options:\n        url: "jdbc:postgresql://127.0.0.1/Adventureworks"\n        driver: "org.postgresql.Driver"\n        user: "dbuser"\n        password: "dbuser123"\n\n\n'))),(0,n.kt)(s.Z,{value:"mssql",label:"SQL Server",mdxType:"TabItem"},(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},'\napplication:\n  connectionRef: "mssql-adventure-works-db"\n  connections:\n    mssql-adventure-works-db:\n      type: "jdbc"\n      options:\n        url: "jdbc:sqlserver://localhost;databaseName=AdventureWorks2019;encrypt=true;trustServerCertificate=true;"\n        driver: "com.microsoft.sqlserver.jdbc.SQLServerDriver"\n        user: "sa"\n        password: "password"\n\n\n')))),(0,n.kt)("p",null,"You can now define the tables you wish to extract data from in the metadata/extract/myextract.sl.yml file:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-yaml"},'extract:\n  connectionRef: "pg-adventure-works-db" # or mssql-adventure-works-db i extracting from SQL Server\n  jdbcSchemas:\n    - schema: "sales"\n      tables:\n        - name: "salesorderdetail"  # table name or simple "*" to extract all tables\n          partitionColumn: "salesorderdetailid" # (optional)  you may parallelize the extraction based on this field\n          fetchSize: 100                        # (optional)  the number of rows to fetch at a time\n          where: "salesorderid > 1000"          # (optional)  the where clause to use to filter the data\n      tableTypes:\n        - "TABLE"\n        #- "VIEW"\n        #- "SYSTEM TABLE"\n        #- "GLOBAL TEMPORARY"\n        #- "LOCAL TEMPORARY"\n        #- "ALIAS"\n        #- "SYNONYM"\n')),(0,n.kt)("p",null,"You may extract the schema and the data from your database using the following command:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Extract the schema"',title:'"Extract',the:!0,'schema"':!0},"\nstarlake.sh extract-schema  \\\n        --config myextract.sl.yml \\\n        --output-dir $SL_ROOT/metadata/load\n\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Extract the data"',title:'"Extract',the:!0,'data"':!0},"\nstarlake.sh extract-data  \\\n        --config myextract.sl.yml \\ # the configuration file\n        --output-dir $SL_ROOT/extracted \\ # (optional)  the directory where the data will be extracted\n        --limit 0 \\ # (optional)  max  number of rows to extract, usefull for testing. 0 means no limit\n        --numPartitions 4 \\ # (optional)  the number of partitions to use to parallelize the extraction\n        --clean\n\n")))}f.isMDXComponent=!0}}]);