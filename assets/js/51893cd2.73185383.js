"use strict";(self.webpackChunkstarlake=self.webpackChunkstarlake||[]).push([[420],{15680:(e,t,a)=>{a.d(t,{xA:()=>c,yg:()=>m});var r=a(96540);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),u=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),d=u(a),f=n,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||i;return a?r.createElement(m,l(l({ref:t},c),{},{components:a})):r.createElement(m,l({ref:t},c))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=f;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[d]="string"==typeof e?e:n,l[1]=o;for(var u=2;u<i;u++)l[u]=a[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}f.displayName="MDXCreateElement"},19365:(e,t,a)=>{a.d(t,{A:()=>l});var r=a(96540),n=a(20053);const i={tabItem:"tabItem_Ymn6"};function l(e){let{children:t,hidden:a,className:l}=e;return r.createElement("div",{role:"tabpanel",className:(0,n.A)(i.tabItem,l),hidden:a},t)}},11470:(e,t,a)=>{a.d(t,{A:()=>k});var r=a(9668),n=a(96540),i=a(20053),l=a(23104),o=a(56347),s=a(57485),u=a(31682),c=a(89466);function d(e){return function(e){return n.Children.map(e,(e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}(e).map((e=>{let{props:{value:t,label:a,attributes:r,default:n}}=e;return{value:t,label:a,attributes:r,default:n}}))}function p(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??d(a);return function(e){const t=(0,u.X)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function f(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:a}=e;const r=(0,o.W6)(),i=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,s.aZ)(i),(0,n.useCallback)((e=>{if(!i)return;const t=new URLSearchParams(r.location.search);t.set(i,e),r.replace({...r.location,search:t.toString()})}),[i,r])]}function g(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,i=p(e),[l,o]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!f({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const r=a.find((e=>e.default))??a[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:t,tabValues:i}))),[s,u]=m({queryString:a,groupId:r}),[d,g]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,i]=(0,c.Dv)(a);return[r,(0,n.useCallback)((e=>{a&&i.set(e)}),[a,i])]}({groupId:r}),b=(()=>{const e=s??d;return f({value:e,tabValues:i})?e:null})();(0,n.useLayoutEffect)((()=>{b&&o(b)}),[b]);return{selectedValue:l,selectValue:(0,n.useCallback)((e=>{if(!f({value:e,tabValues:i}))throw new Error(`Can't select invalid tab value=${e}`);o(e),u(e),g(e)}),[u,g,i]),tabValues:i}}var b=a(92303);const y={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:t,block:a,selectedValue:o,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:d}=(0,l.a_)(),p=e=>{const t=e.currentTarget,a=c.indexOf(t),r=u[a].value;r!==o&&(d(t),s(r))},f=e=>{let t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{const a=c.indexOf(e.currentTarget)+1;t=c[a]??c[0];break}case"ArrowLeft":{const a=c.indexOf(e.currentTarget)-1;t=c[a]??c[c.length-1];break}}t?.focus()};return n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":a},t)},u.map((e=>{let{value:t,label:a,attributes:l}=e;return n.createElement("li",(0,r.A)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>c.push(e),onKeyDown:f,onClick:p},l,{className:(0,i.A)("tabs__item",y.tabItem,l?.className,{"tabs__item--active":o===t})}),a??t)})))}function h(e){let{lazy:t,children:a,selectedValue:r}=e;const i=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===r));return e?(0,n.cloneElement)(e,{className:"margin-top--md"}):null}return n.createElement("div",{className:"margin-top--md"},i.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function w(e){const t=g(e);return n.createElement("div",{className:(0,i.A)("tabs-container",y.tabList)},n.createElement(v,(0,r.A)({},e,t)),n.createElement(h,(0,r.A)({},e,t)))}function k(e){const t=(0,b.A)();return n.createElement(w,(0,r.A)({key:String(t)},e))}},44083:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>u,toc:()=>d});var r=a(9668),n=(a(96540),a(15680)),i=a(11470),l=a(19365);const o={},s="Clustering and Partitioning",u={unversionedId:"guides/load/sink",id:"version-1.2.0/guides/load/sink",title:"Clustering and Partitioning",description:"Some datawarehouses are designed to store data in a way that makes it easy to perform clustering and partitioning.",source:"@site/versioned_docs/version-1.2.0/0300-guides/200-load/165-sink.mdx",sourceDirName:"0300-guides/200-load",slug:"/guides/load/sink",permalink:"/starlake/docs/guides/load/sink",draft:!1,editUrl:"https://github.com/starlake-ai/starlake/edit/master/docs/versioned_docs/version-1.2.0/0300-guides/200-load/165-sink.mdx",tags:[],version:"1.2.0",sidebarPosition:165,frontMatter:{},sidebar:"starlakeSidebar",previous:{title:"Write strategies",permalink:"/starlake/docs/guides/load/write-strategies"},next:{title:"Native load",permalink:"/starlake/docs/guides/load/native"}},c={},d=[],p={toc:d},f="wrapper";function m(e){let{components:t,...a}=e;return(0,n.yg)(f,(0,r.A)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.yg)("h1",{id:"clustering-and-partitioning"},"Clustering and Partitioning"),(0,n.yg)("p",null,"Some datawarehouses are designed to store data in a way that makes it easy to perform clustering and partitioning.\nClustering and partitioning are two techniques that can be used to improve the performance of queries on large datasets.\nClustering involves storing similar rows of data together, while partitioning involves splitting a table into smaller chunks of data."),(0,n.yg)("p",null,(0,n.yg)("inlineCode",{parentName:"p"},"BigQuery"),"and ",(0,n.yg)("inlineCode",{parentName:"p"},"Databricks")," are two datawarehouses that support user-defined clustering and partitioning."),(0,n.yg)("p",null,"To specify clustering and partitioning in BigQuery, you define the following properties in the ",(0,n.yg)("inlineCode",{parentName:"p"},"sink")," section of the table configuration file."),(0,n.yg)(i.A,{mdxType:"Tabs"},(0,n.yg)(l.A,{value:"bigquery",label:"BigQuery",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml",metastring:'title="metadata/load/<domain>/<table>.sl.yml"',title:'"metadata/load/<domain>/<table>.sl.yml"'},'table\n    ...\n    sink:\n      clustering:\n        - <field1>\n        - <field2>\n      partition:\n        field: <field> # only one field is allowed\n      requirePartitionFilter: <true|false> # default is false\n      days: <Ta> # expiration in days. default is "never expire"\n      materializedView: <true|false> # Sink data as a materialized view. default is false\n      enableRefresh: <true|false> # only if materializedView is true. Default is false\n      refreshIntervalMs: <TabItem> # only if enable refresh is true.\n'))),(0,n.yg)(l.A,{value:"spark",label:"Spark",mdxType:"TabItem"},(0,n.yg)("pre",null,(0,n.yg)("code",{parentName:"pre",className:"language-yaml",metastring:'title="metadata/load/<domain>/<table>.sl.yml"',title:'"metadata/load/<domain>/<table>.sl.yml"'},'table:\n    ...\n    sink:\n        format: <format> # For example, "delta" or "parquet".\n        clustering:\n            - <field1>\n            - <field2>\n        partition:\n            - <field1>\n            - <field2>\n        coalesce: <true|false> # default is false\n        options:\n            <key>: <value> # Options to pass to the Spark writer. For example, "compression" -> "snappy"\n')))))}m.isMDXComponent=!0}}]);