"use strict";(self.webpackChunkstarlake=self.webpackChunkstarlake||[]).push([[4e3],{15680:(e,t,a)=>{a.d(t,{xA:()=>c,yg:()=>y});var n=a(96540);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var d=n.createContext({}),s=function(e){var t=n.useContext(d),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=s(e.components);return n.createElement(d.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,i=e.originalType,d=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),p=s(a),m=l,y=p["".concat(d,".").concat(m)]||p[m]||u[m]||i;return a?n.createElement(y,o(o({ref:t},c),{},{components:a})):n.createElement(y,o({ref:t},c))}));function y(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=a.length,o=new Array(i);o[0]=m;var r={};for(var d in t)hasOwnProperty.call(t,d)&&(r[d]=t[d]);r.originalType=e,r[p]="string"==typeof e?e:l,o[1]=r;for(var s=2;s<i;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},87833:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>s});var n=a(9668),l=(a(96540),a(15680));const i={},o="Native load",r={unversionedId:"guides/load/native",id:"version-1.2.0/guides/load/native",title:"Native load",description:"When loading files into your datawarehouse, starlake uses Spark for advanced data validation and",source:"@site/versioned_docs/version-1.2.0/0300-guides/200-load/170-native.mdx",sourceDirName:"0300-guides/200-load",slug:"/guides/load/native",permalink:"/starlake/docs/guides/load/native",draft:!1,editUrl:"https://github.com/starlake-ai/starlake/edit/master/docs/versioned_docs/version-1.2.0/0300-guides/200-load/170-native.mdx",tags:[],version:"1.2.0",sidebarPosition:170,frontMatter:{},sidebar:"starlakeSidebar",previous:{title:"Clustering and Partitioning",permalink:"/starlake/docs/guides/load/sink"},next:{title:"Type validation",permalink:"/starlake/docs/guides/load/validate"}},d={},s=[{value:"Table level",id:"table-level",level:2},{value:"Domain level",id:"domain-level",level:2},{value:"Project level",id:"project-level",level:2}],c={toc:s},p="wrapper";function u(e){let{components:t,...a}=e;return(0,l.yg)(p,(0,n.A)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.yg)("h1",{id:"native-load"},"Native load"),(0,l.yg)("p",null,"When loading files into your datawarehouse, starlake uses Spark for advanced data validation and\nthen uses you datawarehouse's engine to append or overwrite the data."),(0,l.yg)("p",null,"This is done to ensure that the data is fully validated and  is loaded in the most efficient way possible."),(0,l.yg)("p",null,"Sometimes you may want to load the data without running any validation checks. This can be done using the ",(0,l.yg)("inlineCode",{parentName:"p"},"native")," load mode."),(0,l.yg)("p",null,"You may instruct to use the native loader only for a table, a domain or for the entire project."),(0,l.yg)("h2",{id:"table-level"},"Table level"),(0,l.yg)("p",null,"In the table definition, you can specify the load mode as ",(0,l.yg)("inlineCode",{parentName:"p"},"native")," as follows:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-yaml",metastring:'title="metadata/load/<domain>/<table>.sl.yml"',title:'"metadata/load/<domain>/<table>.sl.yml"'},"table:\n  metadata:\n    ...\n    loader: native\n    ...\n  attributes:\n  ...\n")),(0,l.yg)("p",null,"In this case, the table will be loaded using the native loader."),(0,l.yg)("h2",{id:"domain-level"},"Domain level"),(0,l.yg)("p",null,"In the domain definition, you can specify the load mode as ",(0,l.yg)("inlineCode",{parentName:"p"},"native")," as follows:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-yaml",metastring:'title="metadata/load/<domain>/_config.sl.yml"',title:'"metadata/load/<domain>/_config.sl.yml"'},"load:\n  metadata:\n    ...\n    loader: native\n    ...\n  tables:\n  ...\n")),(0,l.yg)("p",null,"In this case, all the tables in the domain will be loaded using the native loader if not otherwise specified at the table level."),(0,l.yg)("h2",{id:"project-level"},"Project level"),(0,l.yg)("p",null,"In the project definition, you can specify the load mode as ",(0,l.yg)("inlineCode",{parentName:"p"},"native")," as follows:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-yaml",metastring:'title="metadata/load/application.sl.yml"',title:'"metadata/load/application.sl.yml"'},"application:\n  ...\n  loader: native\n  ...\n")),(0,l.yg)("p",null,"In this case, all the tables in the project will be loaded using the native loader if not otherwise specified at the domain or table level."))}u.isMDXComponent=!0}}]);