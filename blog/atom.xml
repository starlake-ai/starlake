<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://starlake.ai/blog</id>
    <title>Declarative Data Pipelines Blog</title>
    <updated>2024-05-28T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://starlake.ai/blog"/>
    <subtitle>Declarative Data Pipelines Blog</subtitle>
    <icon>https://starlake.ai/img/favicon_starlake.ico</icon>
    <entry>
        <title type="html"><![CDATA[Polars versus Spark]]></title>
        <id>https://starlake.ai/blog/polars-vs-spark</id>
        <link href="https://starlake.ai/blog/polars-vs-spark"/>
        <updated>2024-05-28T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Introduction]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h2><p>Polars is often compared to Spark. In this post, I will highlight the main differences and the best use cases for each in my data engineering activities.</p><p>As a Data Engineer, I primarily focus on the following goals:</p><ol><li>Parsing files, validating their input, and loading the data into the target data warehouse.</li><li>Once the data is loaded, applying transformations by joining and aggregating the data to build KPIs.</li></ol><p>However, on a daily basis, I also need to develop on my laptop and test my work locally before delivering it to the CI pipeline and then to production.</p><p>What about my fellow data scientist colleagues? They need to run their workload on production data through their favorite notebook environment.</p><p>This post addresses the following points:</p><ul><li>How suitable each tool is for loading files into your data warehouse.</li><li>How easy and powerful each tool is for performing transformations.</li><li>How easy it is to test your code locally before deploying to the cloud</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="load-tasks">Load tasks<a href="#load-tasks" class="hash-link" aria-label="Direct link to Load tasks" title="Direct link to Load tasks">​</a></h2><p>Data loading seems easy at first glance, as almost all databases and APIs offer some sort of single-line command to load a few lines or millions of records quickly. However, this simplicity disappears when you encounter real-world cases such as:</p><ul><li>Fixed-width fields: These files are typically exported from mainframe databases.</li><li>XML files: I sometimes work in  the finance industry where SWIFT is a common XML file format that will be around for some time.</li><li>Multi-character CSV: For example, where the separator consists of two characters like ||.</li><li>File validation: You cannot trust the files you receive and need to check their content thoroughly.</li></ul><p>Loading correct CSV or JSON files using Spark or Polars is straightforward. However, it is also straightforward using your favorite database command line utility, making this capabilities somewhat redundant and even slower than the native data warehouse load feature.</p><p>However, in real-world scenarios, you want to ensure the incoming file adheres to the expected schema and load a variety of file formats not supported natively. This is where Spark excels compared to Polars, as it allows for the parallel loading of your JSONL or CSV files and offers through map operations local and distributed validation of your incoming file.</p><p>As XML and multichar and multiline CSV are only supported by Spark, dealing with file parsing for data loading, Spark is definitely the most suitable solution.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="transform-tasks">Transform tasks<a href="#transform-tasks" class="hash-link" aria-label="Direct link to Transform tasks" title="Direct link to Transform tasks">​</a></h2><p>Three interfaces are provided to transform data: SQL, Dafarames and Datasets.</p><p><strong>SQL</strong></p><p>SQL is the preferred language for most data analysts when it comes to computing aggregations. One of its key benefits is its widespread understanding, which eliminates the learning curve.</p><p>You can use SQL with both Spark and Polars, but Polars has significant limitations. It does not support SQL Window functions nor does it support the SQL statements for update, insert, delete, or merge operations.</p><p><strong>Dataframes</strong></p><p>Both Polars and Spark offer excellent support for DataFrames. The main added value of using DataFrames is the ability to reuse portions of code and access features not available in standard SQL, such as lambda functions, JSON handling and array manipulation.</p><p><strong>Datasets</strong></p><p>As a software engineer, I particularly appreciate Datasets. Datasets are typed DataFrames, meaning that syntax, column names, and types are checked at compile time. If you believe that statically typed languages greatly enhance code quality, then you understand the added value of datasets.</p><p>Datasets are only supported by Spark, allowing you to write clean, reusable, and statically typed transformations. They are available exclusively to statically typed languages such as Java or Scala.</p><p>Spark stands out as the only tool with complete support for SQL, DataFrames, and Datasets. Polars’ limited support for SQL makes it less suitable for my data engineering tasks.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="cloud-era">Cloud Era<a href="#cloud-era" class="hash-link" aria-label="Direct link to Cloud Era" title="Direct link to Cloud Era">​</a></h2><p>At least 60% of the projects I have worked on are cloud-based, primarily targeting Amazon Redshift, Google BigQuery, Databricks, Snowflake, or Azure Synapse. All of these platforms offer serverless support for Spark, making it incredibly easy to run workloads by simply providing your PySpark script and letting the cloud provider handle the rest.</p><p>In the cloud environment, Spark is definitely the tool of choice as I see it.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="single-node">Single node<a href="#single-node" class="hash-link" aria-label="Direct link to Single node" title="Direct link to Single node">​</a></h2><p>There has been much discussion about Spark being slow or too heavy for single-node computers. I was particularly interested in running this test since I currently execute most of my workloads on a single-node Google Cloud Run job with Spark embedded in my Docker image.</p><p>I decided to conduct this test on my almost 3-year-old MacBook Pro M1 Max with 64GB of memory. The test involved loading 27GB of CSV data, selecting a few attributes, computing metrics on those selected attributes, and then saving the results to a Parquet file.</p><p>I ran Spark with default settings and without any fine-tuning. This means it utilized all 10 cores of my MacBook Pro M1 Max but only 1 gigabyte of memory for execution.</p><p>::: note
I could have optimized my Spark workload, but given the small size of the dataset (27GB of CSV), it didn't make sense. The default settings were sufficient.
:::</p><p>Here are the results after a cold restart  of my laptop before each test  to ensure the test did not benefit from any operating system cache.</p><ul><li><p>Apache Spark pipeline took: 29 seconds</p></li><li><p>Polars pipeline took: 56 seconds</p></li></ul><p>::: note
Rerunning Polars gave me 23 seconds instead of 56 seconds. This discrepancy is probably due to filesystem caching by the operating system.
:::</p><p>Load and Save Test: Load a 27GB CSV file with 193 columns per record and save  the result as parquet.</p><ul><li><p>Apache Spark pipeline took: 2mn 18s</p></li><li><p>Polars pipeline took: 2mn 32s</p></li></ul><p>Load parquet and filter on column value then return count : Load a 74 millions records parquet file with 193 columns, filter on 'model' column and return count.</p><ul><li><p>Apache Spark pipeline took: 3 seconds</p></li><li><p>Polars pipeline took: 28 seconds</p></li></ul><p>The table below summarises the results</p><table><thead><tr><th>Task</th><th>Spark 1GB memory</th><th>Polars All the available memory</th></tr></thead><tbody><tr><td>Load CSV, aggregate and save the aggregation as parquet</td><td>29s</td><td>56s</td></tr><tr><td>Load CSV and Save parquet</td><td>2mn 18s</td><td>2mn 32s</td></tr><tr><td>Load Parquet, filter and count</td><td>3s</td><td>28s</td></tr></tbody></table><h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2><p>I don’t think it is time to switch from Spark to Polars, at least for those of us accustomed to the JVM, running workloads in the cloud, or even working on small datasets. However, Polars may be a perfect fit for those familiar with pandas.</p><p>As of today, Spark is the only framework I see that can handle both local and distributed workloads, adapt to on-premise and cloud serverless jobs, and provide the complete SQL support required for most of our transformations.</p>]]></content>
        <author>
            <name>Hayssam Saleh</name>
            <uri>https://www.linkedin.com/in/hayssams/</uri>
        </author>
        <category label="Polars" term="Polars"/>
        <category label="Spark" term="Spark"/>
        <category label="Databricks" term="Databricks"/>
        <category label="Data Engineering" term="Data Engineering"/>
        <category label="Analytics" term="Analytics"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Starlake OSS - Bringing Declarative Programming to Data Engineering and Analytics]]></title>
        <id>https://starlake.ai/blog/starlake-oss</id>
        <link href="https://starlake.ai/blog/starlake-oss"/>
        <updated>2024-05-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Introduction]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h2><p>The advent of declarative programming through tools like Ansible and Terraform, has revolutionized infrastructure deployment by allowing developers to achieve intended goals without specifying the order of code execution.</p><p>This paradigm shift brings forth benefits such as reduced error rates, significantly shortened development cycles, enhanced code readability, and increased accessibility for developers of all levels.</p><p>This is the story of how a small team of developers crafted a platform that goes beyond the boundaries  of conventional data engineering by applying a declarative approach to data extraction, loading, transformation and orchestration.</p><p><img loading="lazy" alt="Starlake" src="/assets/images/starlake-draw-87c6585ebff68be91f9ab04a67d5df0d.png" width="936" height="600" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-genesis">The Genesis<a href="#the-genesis" class="hash-link" aria-label="Direct link to The Genesis" title="Direct link to The Genesis">​</a></h2><p>Back in 2015, at the helm of ebiznext, a boutique data engineering company, we faced a daunting challenge. Our client, a prominent entity in need of a robust big data solution, sought to harness the power of Hadoop and Spark. Despite our modest size (20 people), we dared to compete against industry giants with tenfold resources (100.000+ headcount).</p><p>Our only chance to succeed was to innovate: we needed a data platform that could exponentially outperform the traditional ETL solutions pushed by our competitors. To build data pipelines these GUI based ETLs  require an effort that is proportional to the number and complexity of the sources.</p><p>Determined to disrupt this norm, we embarked on a quest to devise a DevOps friendly platform capable of lightning-fast data ingestion from any source, without the drawbacks of ETLs or specialized engineering skills.</p><p>The day of the tender, our ability to deliver a solution that could load data in a few weeks instead of many months allowed us to stand out from the competition and win the project.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="expisode-1-smartlake-emerges">Expisode 1: Smartlake Emerges<a href="#expisode-1-smartlake-emerges" class="hash-link" aria-label="Direct link to Expisode 1: Smartlake Emerges" title="Direct link to Expisode 1: Smartlake Emerges">​</a></h2><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</div><div class="admonitionContent_S0QG"><p>The basic idea behind Smartlake was that no datawarehouse would stay clean if data quality is checked after the data has been loaded and this pre-load quality checks needed to be handled by data owners.</p></div></div><p>This left us with little choice but to embrace the declarative approach. Empowering business users, we devised a system where data formats and transformations could be described in simple JSON files. Smartlake wasn’t merely a code generator; it was a versatile engine, seamlessly ingesting diverse data formats, executing transformations, and orchestrating operations with unparalleled efficiency.</p><p>To streamline user interaction, we devised an intuitive Excel-to-JSON converter, enabling effortless specification of input formats. Thanks to Smartlake and its declarative approach, the business users were able to define load and transformation operations in a matter of minutes.</p><p><strong>Smartlake Standout features</strong></p><ul><li><p>Load almost any file format at Spark speed (CSV, JSON, XML, FIXED WITH, Multi-record types …) or Kafka topic</p></li><li><p>Validate fields using user-defined schemas with user defined semantic types</p></li><li><p>Apply transformations on the fly to data being loaded (GDPR, normalisation, computed fields ...) with and without schema evolution</p></li><li><p>Sink to almost any target including Spark, Kafka, Elasticsearch.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="episode-2-evolution-to-starlake">Episode 2: Evolution to Starlake<a href="#episode-2-evolution-to-starlake" class="hash-link" aria-label="Direct link to Episode 2: Evolution to Starlake" title="Direct link to Episode 2: Evolution to Starlake">​</a></h2><div class="theme-admonition theme-admonition-note alert alert--secondary admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</div><div class="admonitionContent_S0QG"><p>The basic idea behind Starlake was to bring in all Smartlake benefits to the cloud by leveraging serverless services and Cloud Datawarehouses capabilities while minimising development and execution costs.</p></div></div><p>As the data landscape evolved, so did our vision. Cloud data warehouses emerged as formidable competitors to Spark for query execution. Recognizing this shift, we evolved Smartlake into Starlake, preserving its declarative essence while embracing YAML for enhanced readability. We maintained Spark’s prowess to run inside single or multiple container(s) for data ingestion, leveraging cloud data warehouses for query execution.</p><p>This strategic blend allowed us to optimize performance and cost-effectiveness based on specific workload requirements. The result was a reimagined platform, tailored for the cloud era, yet grounded in the principles of efficiency and simplicity that defined its inception.</p><p>The result is the Starlake OSS project that you can find on <a href="https://github.com/starlake-ai/starlake" target="_blank" rel="noopener noreferrer">Github</a>.</p><p>The capabilities of Starlake are extensively described <a href="https://github.com/starlake-ai/starlake" target="_blank" rel="noopener noreferrer">here</a>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-people-behind-starlake">The people behind Starlake<a href="#the-people-behind-starlake" class="hash-link" aria-label="Direct link to The people behind Starlake" title="Direct link to The people behind Starlake">​</a></h2><p>Smartlake, the precursor to Starlake, owes its existence to the collective efforts of numerous individuals, but a select few stand out for their exceptional contributions:</p><ul><li><p><a href="https://www.linkedin.com/in/samklr/?lipi=urn%3Ali%3Apage%3Ad_flagship3_publishing_post_edit%3BErFcjpiuROmx%2F%2BQ9qmKozQ%3D%3D" target="_blank" rel="noopener noreferrer">Sam Bessalah</a> With Sam’s presence, rallying others became effortless. His visionary outlook and knack for simplifying complexities proved transformative, setting a new standard for implementation.</p></li><li><p><a href="https://www.linkedin.com/in/oliviergirardot/?lipi=urn%3Ali%3Apage%3Ad_flagship3_pulse_read%3By9rNw1mSTEqx928hK46n9w%3D%3D" target="_blank" rel="noopener noreferrer">Olivier Girardot</a> Every team has its coding wizard, and Olivier filled that role impeccably. From leveraging Spark codegen to exploring mathematical frameworks like matryoshka, he pushed the boundaries, mentoring the team with his expertise spanning Docker, Ansible, Python, Scala and Spark internals.</p></li><li><p><a href="https://www.linkedin.com/in/valentin-kasas-937a5837/?lipi=urn%3Ali%3Apage%3Ad_flagship3_pulse_read%3By9rNw1mSTEqx928hK46n9w%3D%3D" target="_blank" rel="noopener noreferrer">Valentin Kasas</a> Valentin championed functional programming in Scala. Introducing concepts like recursion schemes, he empowered the team to craft code that was not just functional but also elegant and maintainable.</p></li></ul><p>As the journey progressed towards the cloud, long time data experts joined and made Starlake what it is today:</p><ul><li><p><a href="https://www.linkedin.com/in/bounkong/" target="_blank" rel="noopener noreferrer">Bounkong Khamphousone</a> The speed and efficiency of Starlake’s extraction and load engines owe much to his contributions.</p></li><li><p><a href="https://www.linkedin.com/in/mohamad-kassir-%F0%9F%93%8A%E2%98%81%EF%B8%8F-399b562b/" target="_blank" rel="noopener noreferrer">Mohamad Kassir</a> His direct involvement with customer projects and his in-depth knowledge of cloud platforms and business needs have been major assets in the evolution of Starlake.</p></li><li><p><a href="https://www.linkedin.com/in/elarib/?lipi=urn%3Ali%3Apage%3Ad_flagship3_publishing_post_edit%3BErFcjpiuROmx%2F%2BQ9qmKozQ%3D%3D" target="_blank" rel="noopener noreferrer">Abdelhamide EL ARIB</a> An early contributor to the load engine, this foresight and execution prowess played a significant role in shaping the platform’s today capabilities.</p></li><li><p><a href="https://www.linkedin.com/in/smanciot/?lipi=urn%3Ali%3Apage%3Ad_flagship3_publishing_post_edit%3BErFcjpiuROmx%2F%2BQ9qmKozQ%3D%3D" target="_blank" rel="noopener noreferrer">Stephane Manciot</a> The developer behind Starlake’s declarative workflows on top of Airflow and Dagster, was pivotal in shaping its operational backbone.</p></li><li><p><a href="https://www.linkedin.com/in/cyrille-ch%C3%A9p%C3%A9lov/?lipi=urn%3Ali%3Apage%3Ad_flagship3_publishing_post_edit%3BErFcjpiuROmx%2F%2BQ9qmKozQ%3D%3D" target="_blank" rel="noopener noreferrer">Cyrille Chépélov</a> A master of codebase optimisation, Cyrille’s rewrite efforts were instrumental in ensuring the reentrant nature of Starlake’s API.</p></li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-next-journey">The next journey<a href="#the-next-journey" class="hash-link" aria-label="Direct link to The next journey" title="Direct link to The next journey">​</a></h2><p>Today with hundreds of gigabytes of data loaded and transformed daily into thousands of tables in various data warehouses, we can confidently say that Starlake is battle tested and ready for the most demanding data engineering &amp; analytics challenges.</p><p>As Starlake is, and will always be open source, join us in building a supportive community. Your insights and feature requests aren’t just welcome, they guide our roadmap.</p><p>Get Started with Starlake:</p><ul><li><p>Check-out the other <a href="https://starlake-ai.github.io/starlake/" target="_blank" rel="noopener noreferrer">features</a></p></li><li><p>Explore our <a href="https://starlake-ai.github.io/starlake/docs/next/intro" target="_blank" rel="noopener noreferrer">documentation</a></p></li></ul><p>Join our community on <a href="https://github.com/starlake-ai/starlake" target="_blank" rel="noopener noreferrer">GitHub</a></p><p>P.S. Please star the repository: <a href="https://github.com/starlake-ai/starlake" target="_blank" rel="noopener noreferrer">https://github.com/starlake-ai/starlake</a>. Also, any issue or enhancement with Starlake, please just report it. It will fall under the scope of gracious care taking of course.</p>]]></content>
        <author>
            <name>Hayssam Saleh</name>
            <uri>https://www.linkedin.com/in/hayssams/</uri>
        </author>
        <category label="Starlake" term="Starlake"/>
        <category label="Data Engineering" term="Data Engineering"/>
        <category label="Analytics" term="Analytics"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Column  and Row Level Security in BigQuery]]></title>
        <id>https://starlake.ai/blog/rls-cls-big-query</id>
        <link href="https://starlake.ai/blog/rls-cls-big-query"/>
        <updated>2022-02-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Data exposition strategies]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="data-exposition-strategies">Data exposition strategies<a href="#data-exposition-strategies" class="hash-link" aria-label="Direct link to Data exposition strategies" title="Direct link to Data exposition strategies">​</a></h2><p>Data may be exposed using views or authorized views and more recently using Row / Column level security.</p><p>Historically, to restrict access on specific columns or rows in BigQuery, one can create a (authorized) view with a SQL request like the one below:</p><p><img loading="lazy" alt="CLS / RLS using Views" src="/assets/images/cls-rls-a2ebde91659ccc0037f3d019bba0adb0.png" title="CLS / RLS using Views" width="650" height="177" class="img_ev3q"></p><p>BigQuery <strong>Views</strong> require to grant access for the end users to the table on top of which the view is created. To bypass that limitation,
BigQuery provide <strong>Authorized views</strong>. However, Authorized views come with the following restrictions:</p><ol><li>The underlying table is accessed through the authorized view where the end user is impersonated,
loosing thus at the table level, the identity of the user making the request.
<img loading="lazy" alt="Impersonation" src="/assets/images/cls-rls-impersonation-d290b998aa748c2b23231558de9afc7c.png" title="Impersonation" width="950" height="778" class="img_ev3q"></li></ol><ol start="2"><li>Each restriction policy require to define a specific authorized view making it difficult to identify who has access to what ?
<img loading="lazy" alt="Multiplication of Authorized Views" src="/assets/images/cls-rls-multiple-authorized-e19a851c7b806f40e9c2c83fd1ddd421.png" title="Multiplication of Authorized Views" width="1144" height="980" class="img_ev3q"></li></ol><ol start="3"><li>Authorized views need to be updated whenever a schema evolution on the underlying table bring in a sensitive field that need to be excluded or a field that need to be included in the view.
In the example below, the new column "description" need to be added to the authorized view if we want it .
<img loading="lazy" alt="Multiplication of Authorized Views" src="/assets/images/cls-rls-schema-evolution-7197e36d99aca59b497350daab3ad183.png" title="Multiplication of Authorized Views" width="1412" height="890" class="img_ev3q"></li></ol><p>That's where Row Level Security and Column Level security features natively supported by BigQuery come in.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="bigquery-row-level-security">BigQuery Row Level Security<a href="#bigquery-row-level-security" class="hash-link" aria-label="Direct link to BigQuery Row Level Security" title="Direct link to BigQuery Row Level Security">​</a></h2><p>Row Level Security restrict access to the rows based on the conditions set in the where clause using the custom SQL statement below:</p><p><img loading="lazy" alt="RLS" src="/assets/images/rls-syntax-2f284354737c3e9ba48138f6dd9ead2f.png" title="RLS" width="1246" height="496" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="big-query-column-level-security">Big Query Column Level Security<a href="#big-query-column-level-security" class="hash-link" aria-label="Direct link to Big Query Column Level Security" title="Direct link to Big Query Column Level Security">​</a></h2><p>Column level security in BigQuery is managed using a taxonomy. This taxonomy is a hierarchy of policy tags
describing the table attributes or other resources. By assigning access rights to a tag,
we restrict access to any resource tagged using this specific tag and this applies to BigQuery table fields.</p><p>In our example, restricting access to specific user/group/sa to the column <code>price</code> require the following steps:</p><ol><li>In Cloud Data Catalog/Policy Tags, create a Taxonomy. Note that <code>Enfore access control</code> should be checked.</li></ol><p><img loading="lazy" alt="CLS Taxonomy" src="/assets/images/cls-taxonomy-5438941ab866042819d8f09a1eb63fa1.png" title="CLS Taxonomy" width="1210" height="1104" class="img_ev3q"></p><ol start="2"><li>Assign permissions for each policy tag you defined</li></ol><p><img loading="lazy" alt="CLS Access" src="/assets/images/cls-tag-access-9fc28444083b65a4adc785238913bc1a.png" title="CLS Access" width="1626" height="666" class="img_ev3q"></p><ol start="3"><li>Tag restricted columns in the BigQuery schema editor.
<img loading="lazy" alt="CLS Assign" src="/assets/images/cls-tag-assign-96ed179a9690d0b1c16dbbff97df5b89.png" title="CLS Assign" width="2310" height="580" class="img_ev3q"></li></ol><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_S0QG"><p>Assigning policy tags may be done using the <code>bq load/update</code> command line tool</p></div></div><h2 class="anchor anchorWithStickyNavbar_LWe7" id="bigquery-rlscls-benefits">BigQuery RLS/CLS benefits<a href="#bigquery-rlscls-benefits" class="hash-link" aria-label="Direct link to BigQuery RLS/CLS benefits" title="Direct link to BigQuery RLS/CLS benefits">​</a></h2><p>Using BigQuery row and column level security features bring several benefits:</p><ul><li>There is no need to create extra views</li><li>Users use the same name for the table but with different access rights</li><li>A company-wide taxonomy is defined allowing better Data Management</li><li>Access rights to a new column in the table are automatically handled</li></ul><h2 class="anchor anchorWithStickyNavbar_LWe7" id="a-word-about-rls-and-cls-in-starlake">A word about RLS and CLS in Starlake<a href="#a-word-about-rls-and-cls-in-starlake" class="hash-link" aria-label="Direct link to A word about RLS and CLS in Starlake" title="Direct link to A word about RLS and CLS in Starlake">​</a></h2><p>Ingesting Data into BigQuery cannot be considered complete without taking into account the access level restrictions on the target table.
Starlake will handle for you all the scripting required to secure BigQuery rows and columns using a YAML declarative syntax to make sure
that your tables are secured in BigQuery:</p><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">Declarative Row Level &amp; Column Level Security</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"PRODUCT"</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">rls</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"my-rls"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">predicate</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"category like 'Food'"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">grants</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"user:me@company.com"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"group:financegroup@company.com"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"sa:serviceacount@gserviceaccount.com"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">attributes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"id"</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">accessPolicy</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> PII</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>]]></content>
        <author>
            <name>Hayssam Saleh</name>
            <uri>https://www.linkedin.com/in/hayssams/</uri>
        </author>
        <category label="Spark" term="Spark"/>
        <category label="BigQuery" term="BigQuery"/>
        <category label="Dataproc" term="Dataproc"/>
        <category label="Google Cloud" term="Google Cloud"/>
        <category label="ETL" term="ETL"/>
        <category label="Starlake" term="Starlake"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Handling Dynamic Partitioning and Merge with Spark on BigQuery]]></title>
        <id>https://starlake.ai/blog/spark-big-query-partitioning</id>
        <link href="https://starlake.ai/blog/spark-big-query-partitioning"/>
        <updated>2021-12-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Data Loading strategies]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="data-loading-strategies">Data Loading strategies<a href="#data-loading-strategies" class="hash-link" aria-label="Direct link to Data Loading strategies" title="Direct link to Data Loading strategies">​</a></h2><p>When loading data into BigQuery, you may want to:</p><ul><li><strong>Overwrite</strong> the existing data and replace it with the incoming data.</li><li><strong>Append</strong> incoming data to existing</li><li><strong>Dynamic partition Overwrite</strong> where only the partitions to which the incoming data belong to are overwritten.</li><li><strong>Merge</strong> incoming data with existing data by keeping the newest version of each record.</li></ul><p>For performance reasons, when having huge amount of data, tables are usually split
into multiple partitions. BigQuery supports range partitioning which are uncommon and date/time partitioning
which is the most widely used type of partitioning.
The diagram below shows our initial table partitioned by the <code>date</code> field.</p><p><img loading="lazy" alt="Initial data" src="/assets/images/initial-data-11df1668242b934b8701feda5810b4aa.png" title="Initial data" width="740" height="311" class="img_ev3q"></p><p>Let's assume we receive the following data that we need to ingest into the table:</p><p><img loading="lazy" alt="Incoming data" src="/assets/images/incoming-data-cdda25bb299ec324656b344d1ec0fa69.png" title="Incoming data" width="257" height="78" class="img_ev3q"></p><p>The strategies above will produce respectively the results below:</p><div class="tabs-container tabList__CuJ"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_LNqP tabs__item--active">Overwrite</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_LNqP">Append</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_LNqP">Dynamic partition Overwrite</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_LNqP">Merge</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_Ymn6"><p>The table ends up with the 2 incoming records.
All existing partitions are deleted.</p><p><img loading="lazy" alt="Overwrite data" src="/assets/images/overwrite-data-184774b0ac03484cbc50406abf45f9ce.png" title="Overwrite data" width="724" height="292" class="img_ev3q"></p></div><div role="tabpanel" class="tabItem_Ymn6" hidden=""><p>The table ends up with 7 records. Note that a new <code>ìtem 1</code> record is added while the older one is kept.</p><p><img loading="lazy" alt="Append data" src="/assets/images/append-data-6640aca8e10fb60122a396061e2fd835.png" title="Append data" width="718" height="358" class="img_ev3q"></p></div><div role="tabpanel" class="tabItem_Ymn6" hidden=""><p>The table ends up with 4 records.
The second partition remains untouched while the first partition is erased and overwritten by with the incoming data.</p><p><img loading="lazy" alt="Merge data" src="/assets/images/partitioned-overwrite-dda869e262e6573154ce334d2ae1a3a9.png" title="Merge data" width="724" height="268" class="img_ev3q"></p></div><div role="tabpanel" class="tabItem_Ymn6" hidden=""><p>The table ends up with 4 records.
Incoming and existing records are added up but only the newest version of each product in the kept in the resulting table.</p><p><img loading="lazy" alt="Merge data" src="/assets/images/merge-data-762cd7b1380a64e2d69fe0db8d2724d6.png" title="Merge data" width="748" height="285" class="img_ev3q"></p></div></div></div><p>There is no good or bad strategy, the use of one of the strategies above depends on the use case. Some use case examples for each of the strategies are:</p><ul><li>Overwrite mode may be useful when you receive every day the list of all product names.</li><li>Append mode may be useful when you receive daily sales.</li><li>Dynamic Partition Overwrite mode may be useful when you ingested the first time a partition, and you need to ingest it again with a different set of data and thus alter only that partition.</li><li>Merge mode may be useful when you receive product updates every day and that you need to keep only the last version of each product.</li></ul><h1>Spark How-to</h1><p><a href="https://github.com/GoogleCloudDataproc/spark-bigquery-connector" target="_blank" rel="noopener noreferrer">Apache Spark SQL connector for Google BigQuery</a> makes BigQuery a first class citizen as a source and sink for Spark jobs.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="append-and-overwrite-modes-in-spark">Append and Overwrite modes in Spark<a href="#append-and-overwrite-modes-in-spark" class="hash-link" aria-label="Direct link to Append and Overwrite modes in Spark" title="Direct link to Append and Overwrite modes in Spark">​</a></h2><p>BigQuery is supported by Spark as a source and sink through the <a href="https://github.com/GoogleCloudDataproc/spark-bigquery-connector" target="_blank" rel="noopener noreferrer">Spark BigQuery connector</a></p><p>Spark comes out of the box with the ability to append or overwrite existing data using a predefined save mode:</p><div class="language-scala codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-scala codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> incomingDF </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Incoming data loaded with the correct schema</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> bqTable </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"project-id.dataset.table"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> saveMode </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> SaveMode</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Overwrite </span><span class="token comment" style="color:#999988;font-style:italic">// or SaveMode.Append fot he appending data</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">incomingDF</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">write</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">mode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">saveMode</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">partitionBy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"date"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"com.google.cloud.spark.bigquery"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">option</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"table"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> bqTable</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">save</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="dynamic-partition-overwrite-mode-in-spark">Dynamic Partition Overwrite mode in Spark<a href="#dynamic-partition-overwrite-mode-in-spark" class="hash-link" aria-label="Direct link to Dynamic Partition Overwrite mode in Spark" title="Direct link to Dynamic Partition Overwrite mode in Spark">​</a></h3><p>To activate dynamic partitioning, you need to set the configuration below before saving the data using the exact same code above:</p><div class="language-scala codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-scala codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">spark</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">conf</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">set</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"spark.sql.sources.partitionOverwriteMode"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token string" style="color:#e3116c">"DYNAMIC"</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Unfortunately, the BigQuery Spark connector does not support this feature (at the time of writing).
We need to manually delete the partitions we want to overwrite first and then append the incoming data.</p><p>Assuming the table is partitioned by the field <code>date</code> and the incoming data loaded in the incomingDF dataframe, the code below will
remove existing partitions that need to be overwritten.</p><div class="language-scala codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">Delete partitions that need to be updated</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-scala codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> incomingDF </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Incoming data loaded with the correct schema</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">incomingDF</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">select</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">date_format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">col</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"date"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"yyyyMMdd"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">cast</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"string"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">distinct</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">collect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">map</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">getString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">foreach </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> partition </span><span class="token keyword" style="color:#00009f">=&gt;</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">    bigQueryClient</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">deleteTable</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">TableId</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">of</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">datasetName</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string-interpolation id function" style="color:#d73a49">s</span><span class="token string-interpolation string" style="color:#e3116c">"</span><span class="token string-interpolation interpolation punctuation" style="color:#393A34">$</span><span class="token string-interpolation interpolation expression">table</span><span class="token string-interpolation string" style="color:#e3116c">\</span><span class="token string-interpolation escape symbol" style="color:#36acaa">$$</span><span class="token string-interpolation string" style="color:#e3116c">partition"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="theme-admonition theme-admonition-tip alert alert--success admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_S0QG"><p>To drop a table partition using the Google Cloud <code>bq</code> command line tool, you may use the following syntax:</p><div class="language-shell codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-shell codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">bq </span><span class="token function" style="color:#d73a49">rm</span><span class="token plain"> -t </span><span class="token string" style="color:#e3116c">'project-id.dataset.table$YYYYMMDD'</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div><p>We now need to append the incomingDF to mimic the <code>dynamic partition overwrite</code> feature:</p><div class="language-scala codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">Append incoming partitions</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-scala codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> incomingDF </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// Incoming data loaded with the correct schema</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> bqTable </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"project-id.dataset.table"</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> saveMode </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> SaveMode</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Append</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">incomingDF</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">write</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">mode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">saveMode</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">partitionBy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"date"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"com.google.cloud.spark.bigquery"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">option</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"table"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> bqTable</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">save</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><div class="theme-admonition theme-admonition-caution alert alert--warning admonition_LlT9"><div class="admonitionHeading_tbUL"><span class="admonitionIcon_kALy"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>caution</div><div class="admonitionContent_S0QG"><p>The issue with this approach is that if the program crashes during the "appending" of the incoming data, partitions will have been deleted and data would be lost.
However, you can still ingest the same file again in case of failure and the end result will be the same.</p></div></div><h3 class="anchor anchorWithStickyNavbar_LWe7" id="dynamic-partition-merge-in-spark">Dynamic Partition Merge in Spark<a href="#dynamic-partition-merge-in-spark" class="hash-link" aria-label="Direct link to Dynamic Partition Merge in Spark" title="Direct link to Dynamic Partition Merge in Spark">​</a></h3><p>When you need to keep the last version of the record for each product, both BigQuery and Databricks (the company behind Spark in case you lived on the moon the last ten years) support
the merge SQL statement:</p><div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">Merge records using SQL statement</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">MERGE</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">INTO</span><span class="token plain"> target_table</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">USING</span><span class="token plain"> incoming_table</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">ON</span><span class="token plain"> target_table</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">product </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> incoming_table</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">product</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">WHEN</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">NOT</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">MATCHED</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">THEN</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">INSERT</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">WHEN</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">MATCHED</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">AND</span><span class="token plain"> incoming_table</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> target_table</span><span class="token punctuation" style="color:#393A34">.</span><span class="token keyword" style="color:#00009f">date</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">THEN</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">UPDATE</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">SET</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">/*</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">    WHEN MATCHED AND incoming_table.timestamp &lt;= target_table.timestamp THEN</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">        SKIP</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">*/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>Unfortunately the <code>MERGE</code> statement is not supported by Apache Spark. It is only supported by Databricks, its commercial version.</p><p>To do a merge using the Spark BigQuery connector, we need to do it by following the steps below:</p><p><strong>Step 1: Create a dataframe with all the rows</strong></p><div class="language-scala codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-scala codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> allRowsDF </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    incomingDF</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">unionByName</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">existingDF</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" alt="Step 1" src="/assets/images/step1-union-data-bed4397c49e18fa5cac040448e6ca729.png" title="Step 1" width="752" height="940" class="img_ev3q"></p><p><strong>Step 2: group by product and order each product occurrence by date descending</strong></p><div class="language-scala codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-scala codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> orderingWindow </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    Window</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">partitionBy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"product"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">orderBy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">col</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"date"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">desc</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> col</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"product"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> orderedDF </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    allRowsDF</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">withColumn</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"rownum"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> row_number</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">over</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">orderingWindow</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" alt="Step 2" src="/assets/images/step2-ordering-data-54433f38583dbe31bf3f12e182ffb14b.png" title="Step 2" width="381" height="325" class="img_ev3q"></p><p>In the step 2 above, each product is ordered by date with the most recent one first (descending order).
We identify it by the <code>rownum</code> column.</p><p><strong>Step 3: Keep the most recent product</strong></p><div class="language-scala codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-scala codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> toKeepDF </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    orderedDF</span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">where</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">col</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"rownum"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">==</span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">drop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"rownum"</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" alt="Step 3" src="/assets/images/step3-keep-data-36d7eea05a5e792e351ca7dcc1e020ab.png" title="Step 3" width="458" height="349" class="img_ev3q"></p><p><strong>Step 4: Overwrite existing partitions with the data we want to keep</strong></p><div class="language-scala codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-scala codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> bqTable </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"project-id.dataset.table"</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">val</span><span class="token plain"> saveMode </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> SaveMode</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">Overwrite</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">toKeepDF</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">write</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">mode</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">saveMode</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">partitionBy</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"date"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">format</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"com.google.cloud.spark.bigquery"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">option</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"table"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> bqTable</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">save</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><img loading="lazy" alt="Step 4" src="/assets/images/step4-save-data-7b050f58bb2d21e98bbf8a88042a0712.png" title="Step 4" width="747" height="278" class="img_ev3q"></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="starlake-how-to">Starlake How-to<a href="#starlake-how-to" class="hash-link" aria-label="Direct link to Starlake How-to" title="Direct link to Starlake How-to">​</a></h2><p><a href="https://starlake.io" target="_blank" rel="noopener noreferrer">Starlake</a> is a declarative Ingestion Framework based on YAML description files.<br>
The 4 ingestion strategies described above are supported through the settings below:</p><div class="tabs-container tabList__CuJ"><ul role="tablist" aria-orientation="horizontal" class="tabs"><li role="tab" tabindex="0" aria-selected="true" class="tabs__item tabItem_LNqP tabs__item--active">Overwrite</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_LNqP">Append</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_LNqP">Dynamic partition Overwrite</li><li role="tab" tabindex="-1" aria-selected="false" class="tabs__item tabItem_LNqP">Merge</li></ul><div class="margin-top--md"><div role="tabpanel" class="tabItem_Ymn6"><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">Schema Definition File</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"mydb"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token key atrule" style="color:#00a4db">directory</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"..."</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">+    metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">schemas</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"mytable"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">pattern</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"data-.*.csv"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">writeStrategy</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"OVERWRITE"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token key atrule" style="color:#00a4db">attributes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"date"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"date"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">rename</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"id"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"product"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"price"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"decimal"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="#append-and-overwrite-modes-in-spark">See again manual Spark overwrite</a></p></div><div role="tabpanel" class="tabItem_Ymn6" hidden=""><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">Schema Definition File</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"mydb"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token key atrule" style="color:#00a4db">directory</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"..."</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">+    metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">schemas</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"mytable"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">pattern</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"data-.*.csv"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">writeStrategy</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"APPEND"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">attributes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"date"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"date"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">rename</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"id"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"product"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"price"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"decimal"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="#append-and-overwrite-modes-in-spark">See again manual Spark append</a></p></div><div role="tabpanel" class="tabItem_Ymn6" hidden=""><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">Schema Definition File</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"mydb"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">directory</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"..."</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">+   metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">schemas</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"mytable"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">pattern</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"data-.*.csv"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">strategy</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"OVERWRITE_BY_PARTITION"</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">sink</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">partition</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">              </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"date"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">       </span><span class="token key atrule" style="color:#00a4db">attributes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"date"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"date"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">rename</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"id"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"product"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"price"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"decimal"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="#dynamic-partition-overwrite-mode-in-spark">See again manual Spark dynamic partition overwrite</a></p></div><div role="tabpanel" class="tabItem_Ymn6" hidden=""><div class="language-yaml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockTitle_Ktv7">Schema Definition File</div><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-yaml codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"mydb"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">     </span><span class="token key atrule" style="color:#00a4db">directory</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"..."</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token key atrule" style="color:#00a4db">+    metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token key atrule" style="color:#00a4db">schemas</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"mytable"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">pattern</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"data-.*.csv"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">metadata</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">          </span><span class="token key atrule" style="color:#00a4db">strategy</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"OVERWRITE_BY_KEY_AND_TIMESTAMP"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">key</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"product"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line theme-code-block-highlighted-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">timestamp</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"date"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token key atrule" style="color:#00a4db">attributes</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"date"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"date"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"product"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"string"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token punctuation" style="color:#393A34">-</span><span class="token plain"> </span><span class="token key atrule" style="color:#00a4db">name</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"price"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token key atrule" style="color:#00a4db">type</span><span class="token punctuation" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"decimal"</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p><a href="#dynamic-partition-merge-in-spark">See again manual Spark Merge</a></p></div></div></div>]]></content>
        <author>
            <name>Hayssam Saleh</name>
            <uri>https://www.linkedin.com/in/hayssams/</uri>
        </author>
        <category label="Spark" term="Spark"/>
        <category label="BigQuery" term="BigQuery"/>
        <category label="Dataproc" term="Dataproc"/>
        <category label="Google Cloud" term="Google Cloud"/>
        <category label="ETL" term="ETL"/>
        <category label="Starlake" term="Starlake"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Bonjour]]></title>
        <id>https://starlake.ai/blog/bonjour</id>
        <link href="https://starlake.ai/blog/bonjour"/>
        <updated>2021-09-18T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Pipelining fast data is big. Pipelining big data fast is bigger. :)]]></summary>
        <content type="html"><![CDATA[<p>Pipelining fast data is big. Pipelining big data fast is bigger. :)</p>]]></content>
        <author>
            <name>Starlake Team</name>
            <uri>https://github.com/starlake-ai</uri>
        </author>
        <category label="bonjour" term="bonjour"/>
        <category label="Starlake" term="Starlake"/>
    </entry>
</feed>