include required("reference.conf")

# NOTE: this file should contain deviations from the standard ("production default") reference.conf for use
# in the Test context
# Typelevel Config loads application-test.conf first and if it doesn't find it, reference.conf
# Our own TypeHelper will look for application-test.conf first.


archive = true

fileSystem = "file://"

sinkToFile=true

hive = false

grouped = true

analyze = false

expectations.active = true

connections {
  # audit {
  #   sparkFormat = "jdbc"
  #   options {
  #     url: "jdbc:postgresql://127.0.0.1:5403/starlakedb?user=postgres&password=ficpug-Podbid-7fobnu",
  #     user: "postgres",
  #     password: "ficpug-Podbid-7fobnu",
  #     driver: "org.postgresql.Driver"
  #     # driver = "org.h2.Driver"
  #   }
  # }
  bigquery {
    sparkFormat = "bigquery"
    type = "bigquery"
    options {
      authType: APPLICATION_DEFAULT #SERVICE_ACCOUNT_JSON_KEYFILE
      gcsBucket: starlake-app
      #jsonKeyfile: "/Users/me/.gcloud/keys/me.json"
    }
  }
  BQ { # Used for XLSReader
    type = "bigquery"
    options {
      authType: APPLICATION_DEFAULT #SERVICE_ACCOUNT_JSON_KEYFILE
      location: "EU" # EU or US or ..
      gcsBucket: starlake-app
      #jsonKeyfile: "/Users/me/.gcloud/keys/me.json"
    }
  }
  spark {
    sparkFormat = "parquet"
    type = "fs"
    options {
      #gcsBucket: starlake-app
      #authType: SERVICE_ACCOUNT_JSON_KEYFILE
      #jsonKeyfile: "/Users/me/.gcloud/keys/me.json"
    }
  }
  audit {
    type = "jdbc"
    sparkFormat = "jdbc"
    ## The default URI is in memory only
    options {
      "url": "jdbc:h2:/tmp/h2:test-"${SL_TEST_ID}";DB_CLOSE_DELAY=-1;INIT=CREATE SCHEMA IF NOT EXISTS AUDIT\\;CREATE SCHEMA IF NOT EXISTS USERS\\;CREATE SCHEMA IF NOT EXISTS YELP\\;"
      ## uncomment this in order to have traces (on the console) about the in-flight SQL
      # "url": "jdbc:h2:mem:test-"${SL_TEST_ID}";DB_CLOSE_DELAY=-1;TRACE_LEVEL_SYSTEM_OUT=2",
      ## Uncomment the following to keep an on-disk trace of your test database:
      # "url":"jdbc:h2:/tmp/h2-"${SL_TEST_ID}"",
      "driver": "org.h2.Driver"
      "user":"sa"
      "password":"sa"
    }
  }
  test-h2 {
    engine = "h2"
    type = "jdbc"

    ## The default URI is in memory only
    options {
      "url": "jdbc:h2:/tmp/h2:test-"${SL_TEST_ID}";DB_CLOSE_DELAY=-1;INIT=CREATE SCHEMA IF NOT EXISTS AUDIT\\;CREATE SCHEMA IF NOT EXISTS USERS\\;CREATE SCHEMA IF NOT EXISTS YELP\\;"
      ## uncomment this in order to have traces (on the console) about the in-flight SQL
      # "url": "jdbc:h2:mem:test-"${SL_TEST_ID}";DB_CLOSE_DELAY=-1;TRACE_LEVEL_SYSTEM_OUT=2",
      ## Uncomment the following to keep an on-disk trace of your test database:
      # "url":"jdbc:h2:/tmp/h2-"${SL_TEST_ID}"",
      "driver": "org.h2.Driver"
      "user":"sa"
      "password":"sa"
    }
  }
  test-pg {
    type = "jdbc"

    ## The default URI is in memory only
    options {
      "url": "jdbc:postgresql://127.0.0.1:5432/starlake"
      ## uncomment this in order to have traces (on the console) about the in-flight SQL
      # "url": "jdbc:h2:mem:test-"${SL_TEST_ID}";DB_CLOSE_DELAY=-1;TRACE_LEVEL_SYSTEM_OUT=2",
      ## Uncomment the following to keep an on-disk trace of your test database:
      # "url":"jdbc:h2:/tmp/h2-"${SL_TEST_ID}"",
      "driver": "org.postgresql.Driver"
      "user":"postgres"
      "password":"???"
    }
  }
}

connectionRef = spark

audit {
  sink {
    connectionRef = "audit"
    # bq-dataset = "audit"
  }
}

metrics {
  active = true
}

spark {
  debug.maxToStringFields=100
  master = "local[*]"
}


